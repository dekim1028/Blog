let Router,postsCtrl,checkLoggedIn;_bc1‍.x([["default",()=>_bc1‍.o]]);_bc1‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_bc1‍.w("./posts.ctrl",[["*",null,function(v){postsCtrl=v}]]);_bc1‍.w("../../lib/checkLoggedIn",[["default",["checkLoggedIn"],function(v){checkLoggedIn=v}]]);



const posts = new Router();

posts.get('/',postsCtrl.list);
posts.post('/', checkLoggedIn, postsCtrl.write);
/*
posts.get('/:id', postsCtrl.checkObjectId, postsCtrl.read);
posts.delete('/:id', postsCtrl.checkObjectId, postsCtrl.remove);
posts.patch('/:id', postsCtrl.checkObjectId, postsCtrl.update);
*/

const post = new Router(); // /api/post/:id
post.get('/', postsCtrl.read);
post.delete('/',checkLoggedIn, postsCtrl.checkOwnPost, postsCtrl.remove);
post.patch('/',checkLoggedIn, postsCtrl.checkOwnPost, postsCtrl.update);

posts.use('/:id',postsCtrl.getPostById, post.routes());

_bc1‍.d(posts);
