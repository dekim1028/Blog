{"version":3,"sources":["components/auth/AuthTemplete.js","components/common/Button.js","components/auth/AuthForm.js","modules/loading.js","lib/createRequestSaga.js","lib/api/client.js","lib/api/auth.js","modules/auth.js","modules/user.js","containers/auth/LoginForm.js","pages/LoginPage.js","containers/auth/SignUpForm.js","pages/SignUpPage.js","components/common/Header.js","containers/common/HeaderContainer.js","components/List/Tag.js","components/view/PostView.js","modules/view.js","lib/api/posts.js","components/common/Modal.js","components/view/RemoveModal.js","components/view/ViewActionButton.js","modules/write.js","containers/view/PostViewContainer.js","components/common/Responsive.js","pages/PostViewPage.js","components/write/Editor.js","containers/write/EditorContainer.js","components/write/TagBox.js","containers/write/TagBoxContainer.js","components/write/WriteActionButton.js","containers/write/WriteActionButtonContainer.js","pages/PostWritePage.js","components/List/NoData.js","components/List/PostList.js","modules/list.js","containers/list/PostListContainer.js","components/List/Pagination.js","containers/list/PaginationContainer.js","pages/PostListPage.js","components/about/AboutMyLog.js","pages/AboutMyLogPage.js","pages/HomePage.js","App.js","serviceWorker.js","modules/index.js","index.js"],"names":["AuthTempleteBlock","styled","div","WhiteBox","Logo","Link","AuthTemplete","children","to","ButtonStyle","css","customStyle","props","color1","ButtonBlock","button","width","height","LinkBlock","Button","AuthFormBlock","InputBox","input","AuthFooter","ErrorBox","AuthForm","type","form","onChange","onSubmit","error","className","name","placeholder","value","userid","password","passwordConfirm","username","startLoading","createAction","requestType","finishLoading","loading","handleActions","state","action","createRequestActionTypes","createRequestSaga","request","SUCCESS","FAILURE","put","call","payload","response","data","meta","console","log","client","axios","create","logout","post","authSaga","SIGNUP","SIGNUP_SUCCESS","SIGNUP_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","changeField","key","initializeForm","signup","login","signupSaga","loginSaga","takeLatest","initialState","auth","authError","produce","draft","logoutSaga","userSaga","CHECK","CHECK_SUCCESS","CHECK_FAILURE","tempSetUser","user","check","checkSaga","get","checkFailureSaga","localStorage","removeItem","e","authAPI","checkError","withRouter","history","useState","setError","dispatch","useDispatch","useSelector","useEffect","alert","push","setItem","JSON","stringify","target","preventDefault","LoginPage","status","includes","signUpRef","current","passwordRef","focus","SignUpPage","HeaderBlock","Wrapper","Header","onLogout","onClick","TagBlock","TagItem","Tag","tags","map","tag","PostViewBlock","PostHeader","PostBody","PostFooter","PostView","actionButton","title","body","publishedData","Date","toLocaleDateString","dangerouslySetInnerHTML","__html","viewSaga","VIEW_POST","VIEW_POST_SUCCESS","VIEW_POST_FAILURE","viewPost","id","viewPostSaga","view","ModalBackBlock","ModalBlock","ModalTitle","h1","ModalContent","ModalBtnStyle","CancelBtn","ConfirmBtn","Modal","visible","titleText","contentText","cancelText","confirmText","onCancel","onConfirm","RemoveModal","ActionButtonBlock","ViewButtonStyle","StyledButton1","StyledButton2","ViewActionButton","onUpdate","onRemove","modalVisible","setModalVisible","writeSaga","WRITE_POST","WRITE_POST_SUCCESS","WWRITE_POST_FAILURE","UPDATE_POST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","initialize","writePost","setOriginalPost","updatePost","originalId","writePostSaga","updatePostSaga","patch","postError","write","_id","match","postId","params","a","delete","ResponsiveBlock","Responsive","rest","PostViewPage","EditorBlock","TitleInput","QuillBlock","Editor","quillElement","useRef","quillInstance","Quill","theme","modules","toolbar","header","list","quill","on","delta","oldDelta","source","root","innerHTML","mounted","ref","EditorContainer","useCallback","TagBoxBlock","TagForm","TagBoxInput","TagList","TagListItem","TagBox","onChangeTags","setInput","localTags","setLocalTags","insertTag","newTags","trim","filter","TagBoxContainer","WriteActionButtonBlock","WriteActionButton","onPublish","onCancle","isEdit","goBack","PostWritePage","NoDataBlock","NotifyBlock","NoData","showWriteButton","PostListBlock","PostItemList","ul","PostItemBlock","li","PostInfo","PostSubject","PostItem","PostList","posts","length","listSaga","LIST_POST","LIST_POST_SUCCESS","LIST_POST_FAILURE","listPost","page","listPostSaga","queryString","qs","lastPage","parseInt","headers","location","parse","search","ignoreQueryPrefix","PaginationBlock","Pagination","buildLink","query","disabled","undefined","PostListPage","AboutMyLogBlock","Page","PageStyle","LeftPage","RightPage","GoToStartBtn","FoldStyle","FoldUp","VscFoldUp","FoldDown","VscFoldDown","AboutMyLog","targetNum","setTargetNum","movePage","setmovePage","checkUp","setCheckUp","checkDown","setCheckDown","timerID","setInterval","changeState","clearInterval","style","marginTop","cn","hide","AboutMyLogPage","HomePage","App","component","path","exact","Boolean","window","hostname","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","getItem","loadUser","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"qyBAIA,IAAMA,EAAoBC,IAAOC,IAAV,KAYjBC,EAAWF,IAAOC,IAAV,KAQRE,EAAOH,YAAOI,IAAPJ,CAAH,KAiBKK,EAXM,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACnB,OACI,kBAACP,EAAD,KACI,kBAACG,EAAD,KACI,kBAACC,EAAD,CAAMI,GAAG,KAAT,UACCD,K,64CC/BjB,IAAME,EAAcC,YAAH,KAyBXC,EAAcD,YAAH,KACX,SAAAE,GAAK,OACHA,EAAMC,QACNH,YADA,QAUFI,EAAcb,IAAOc,OAAV,IACXN,EACAE,GAEA,SAAAC,GAAK,OACHA,EAAMI,OACNN,YADA,IAEYE,EAAMI,UAGpB,SAAAJ,GAAK,OACHA,EAAMK,QACNP,YADA,IAEaE,EAAMK,WAKrBC,EAAYjB,YAAOI,IAAPJ,CAAH,IACTQ,EACAE,GAEA,SAAAC,GAAK,OACHA,EAAMI,OACNN,YADA,IAEYE,EAAMI,UAIpB,SAAAJ,GAAK,OACHA,EAAMK,QACNP,YADA,IAEaE,EAAMK,WAgBZE,EAXA,SAAAP,GACX,OACIA,EAAMJ,GACF,kBAACU,EAAcN,GAEf,kBAACE,EAAgBF,I,4sBC9E7B,I,EAAMQ,EAAgBnB,IAAOC,IAAV,KAQbmB,EAAWpB,IAAOqB,MAAV,KAQRC,EAAatB,IAAOC,IAAV,KAWVsB,EAAWvB,IAAOC,IAAV,KAqCCuB,EA/BE,SAAC,GAA6C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,MAC/C,OACI,kBAACV,EAAD,KACI,wBAAIW,UAAU,aACF,UAAPL,EAAe,qBAAM,4BAE1B,0BAAMG,SAAUA,GACZ,kBAACR,EAAD,CAAUW,KAAK,SAASN,KAAK,OAAOO,YAAY,qBAAMC,MAAOP,EAAKQ,OAAQP,SAAUA,IACpF,kBAACP,EAAD,CAAUW,KAAK,WAAWN,KAAK,WAAWO,YAAY,2BAAOC,MAAOP,EAAKS,SAAUR,SAAUA,IACrF,WAAPF,GACG,kBAACL,EAAD,CAAUW,KAAK,kBAAkBN,KAAK,WAAWO,YAAY,wCAAUC,MAAOP,EAAKU,gBAAiBT,SAAUA,IAE1G,WAAPF,GACG,kBAACL,EAAD,CAAUW,KAAK,WAAWN,KAAK,OAAOO,YAAY,eAAKC,MAAOP,EAAKW,SAAUV,SAAUA,IAE1FE,GAAO,kBAACN,EAAD,KAAWM,GACnB,kBAAC,EAAD,CAAQd,MAAM,OAAOC,OAAO,QAChB,UAAPS,EAAe,qBAAM,6BAG9B,kBAACH,EAAD,KACY,UAAPG,EACI,kBAAC,IAAD,CAAMlB,GAAG,WAAT,4BAEA,kBAAC,IAAD,CAAMA,GAAG,UAAT,yB,yDCzDR+B,EAAeC,YAHN,yBAKlB,SAAAC,GAAW,OAAIA,KAGNC,EAAgBF,YAPN,0BASnB,SAAAC,GAAW,OAAIA,KAmBJE,EAdCC,aAAa,mBAfP,yBAiBE,SAACC,EAAMC,GAAP,sBACTD,EADS,CAEZJ,aAAY,OAJK,cAdN,0BAoBE,SAACI,EAAMC,GAAP,sBACVD,EADU,CAEbJ,aAAY,OARK,GAFT,I,SCZPM,GAA2B,SAAArB,GAIpC,MAAO,CAACA,EAHK,UAAMA,EAAN,YACA,UAAMA,EAAN,cAKF,SAASsB,GAAkBtB,EAAKuB,GAC3C,IAAMC,EAAO,UAAMxB,EAAN,YACPyB,EAAO,UAAMzB,EAAN,YAEb,iBAAO,WAAUoB,GAAV,uEACH,OADG,SACGM,aAAIb,EAAab,IADpB,OAGkB,OAHlB,kBAGwB2B,aAAKJ,EAAQH,EAAOQ,SAH5C,OAIC,OADMC,EAHP,gBAIOH,aAAI,CACN1B,KAAKwB,EACLI,QAAQC,EAASC,KACjBC,KAAKF,IAPV,+BAWC,OAXD,0BAUCG,QAAQC,IAAR,MAVD,UAWOP,aAAI,CACN1B,KAAKyB,EACLG,QAAQ,EAAD,GACPxB,OAAM,IAdX,QAiBH,OAjBG,UAiBGsB,aAAIV,EAAchB,IAjBrB,yD,gBCUIkC,G,QAtBAC,EAAMC,SCWRC,GAAS,kBAClBH,GAAOI,KAAK,qB,YCyBCC,I,GA9BgClB,GAAyB,e,qBAAnEmB,G,MAAQC,G,MAAgBC,G,SACerB,GAAyB,c,qBAAhEsB,G,MAAOC,G,MAAeC,G,MAGhBC,GAAchC,YAPN,qBASjB,kBAAqB,CACjBb,KADJ,EAAEA,KAEE8C,IAFJ,EAAOA,IAGHvC,MAHJ,EAAWA,UAOFwC,GAAiBlC,YAfN,wBAemC,SAAAb,GAAI,OAAEA,KAEpDgD,GAASnC,YAAa0B,IAAO,kBAA+B,CACrE/B,OADsC,EAAEA,OAExCC,SAFsC,EAASA,SAG/CE,SAHsC,EAAkBA,aAM/CsC,GAAQpC,YAAa6B,IAAM,kBAAsB,CAC1DlC,OADoC,EAAEA,OAEtCC,SAFoC,EAASA,aAM3CyC,GAAa7B,GAAkBkB,ID9Bf,SAAC,GAAD,IAAE/B,EAAF,EAAEA,OAAOC,EAAT,EAASA,SAASE,EAAlB,EAAkBA,SAAlB,OAClBsB,GAAOI,KAAK,mBAAmB,CAAC7B,SAAOC,WAASE,gBC8B9CwC,GAAY9B,GAAkBqB,IDnCf,SAAC,GAAD,IAAElC,EAAF,EAAEA,OAAOC,EAAT,EAASA,SAAT,OACjBwB,GAAOI,KAAK,kBAAkB,CAAC7B,SAAOC,gBCoCnC,SAAU6B,KAAV,iEACH,OADG,SACGc,aAAWb,GAAOW,IADrB,OAEH,OAFG,SAEGE,aAAWV,GAAMS,IAFpB,wCAKP,I,GAAME,GAAc,CAChBJ,MAAM,CACFzC,OAAO,GACPC,SAAS,IAEbuC,OAAO,CACHxC,OAAO,GACPC,SAAS,GACTC,gBAAgB,GAChBC,SAAS,IAEb2C,KAAK,KACLC,UAAU,MAoCCD,GAjCFrC,aAAa,kBAAC,GArDN,qBAuDE,SAACC,EAAD,WAAQS,QAAS3B,EAAjB,EAAiBA,KAAK8C,EAAtB,EAAsBA,IAAIvC,EAA1B,EAA0BA,MAA1B,OACXiD,YAAQtC,GAAM,SAAAuC,GACVA,EAAMzD,GAAM8C,GAAKvC,QAJP,YAAC,GApDH,wBA0DE,SAACW,EAAD,SAAgBlB,EAAhB,EAAQ2B,QAAR,sBACXT,GADW,mBAEblB,EAAMqD,GAAarD,IAFN,0BAGJ,MAHI,OANA,YAAC,GAWlBwC,IAAgB,SAACtB,EAAD,OAAgBoC,EAAhB,EAAQ3B,QAAR,sBACVT,EADU,CAEbqC,UAAU,KACVD,YAdc,YAAC,GAgBlBb,IAAgB,SAACvB,EAAD,OAAgBf,EAAhB,EAAQwB,QAAR,sBACVT,EADU,CAEbqC,UAAUpD,OAlBI,YAAC,GAoBlBwC,IAAe,SAACzB,EAAD,OAAgBoC,EAAhB,EAAQ3B,QAAR,sBACTT,EADS,CAEZqC,UAAU,KACVD,YAvBc,YAAC,GAyBlBV,IAAe,SAAC1B,EAAD,OAAgBf,EAAhB,EAAQwB,QAAR,sBACTT,EADS,CAEZqC,UAAUpD,OA3BI,IA8BtBkD,I,YC9DMK,I,YASOC,I,GA9B2BvC,GAAyB,c,qBAA9DwC,G,MAAMC,G,MAAcC,G,MAGdC,GAAclD,YAJL,sBAIgC,SAAAmD,GAAI,OAAEA,KAC/CC,GAAQpD,YAAa+C,IACrBxB,GAASvB,YAJR,eAWRqD,GAAY7C,GAAkBuC,IFRf,kBACjB3B,GAAOkC,IAAI,sBEQf,SAASC,KACL,IACIC,aAAaC,WAAW,QAC3B,MAAMC,GACHxC,QAAQC,IAAIuC,IAIpB,SAAUb,KAAV,iEAEQ,OAFR,kBAEchC,aAAK8C,IAFnB,OAGQH,aAAaC,WAAW,QAHhC,+CAKQvC,QAAQC,IAAR,MALR,qDASO,SAAU2B,KAAV,iEACH,OADG,SACGP,aAAWQ,GAAMM,IADpB,OAEH,OAFG,SAEGd,aAAWU,GAAcM,IAF5B,OAGH,OAHG,SAGGhB,aAhCI,cAgCcM,IAHrB,wCAMQzC,oBAAa,kBAAC,GArCP,sBAsCF,SAACC,EAAD,OAAgB8C,EAAhB,EAAQrC,QAAR,sBACTT,EADS,CAEZ8C,YAHoB,YAAC,GAKxBH,IAAe,SAAC3C,EAAD,OAAgB8C,EAAhB,EAAQrC,QAAR,sBACTT,EADS,CAEZ8C,OACAS,WAAW,UARS,YAAC,GAUxBX,IAAe,SAAC5C,EAAD,OAAgBf,EAAhB,EAAQwB,QAAR,sBACTT,EADS,CAEZ8C,KAAK,KACLS,WAAWtE,OAbS,YAAC,GAnCf,eAkDD,SAAAe,GAAK,sBACPA,EADO,CAEV8C,KAAK,UAjBe,IA7BP,CACjBA,KAAK,KACLS,WAAW,OC6DAC,gBArEG,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EACHC,mBAAS,IADN,mBACtBzE,EADsB,KACf0E,EADe,KAEvBC,EAAWC,cAFY,EAISC,aAAY,gBAAE1B,EAAF,EAAEA,KAAKU,EAAP,EAAOA,KAAP,MAAgB,CAC9DhE,KAAKsD,EAAKL,MACVK,KAAKA,EAAKA,KACVC,UAAUD,EAAKC,UACfS,KAAKA,EAAKA,SAJPhE,EAJsB,EAItBA,KAAMsD,EAJgB,EAIhBA,KAAMC,EAJU,EAIVA,UAAWS,EAJD,EAICA,KAsD9B,OA9BAiB,qBAAU,WACNH,EACI/B,GAAe,YAErB,CAAC+B,IAEHG,qBAAU,WACH1B,EACCsB,EAAS,8IAGVvB,IACCvB,QAAQC,IAAI,iBACZ8C,EAASb,SAEf,CAACV,EAAUD,EAAKwB,IAElBG,qBAAU,WACN,GAAGjB,EAAK,CACJjC,QAAQC,IAAI,qBACZkD,MAAM,GAAD,OAAIlB,EAAKrD,SAAT,2CACLgE,EAAQQ,KAAK,KACb,IACId,aAAae,QAAQ,OAAOC,KAAKC,UAAUtB,IAC9C,MAAMO,GACHxC,QAAQC,IAAI,mCAGtB,CAACgC,EAAKW,IAGJ,kBAAC,EAAD,CACI5E,KAAK,QACLC,KAAMA,EACNC,SAnDS,SAAAsE,GAAK,IAAD,EACKA,EAAEgB,OAAjBlF,EADU,EACVA,KAAME,EADI,EACJA,MACbuE,EACIjC,GAAY,CACR7C,KAAK,QACL8C,IAAIzC,EACJE,YA8CJL,SAzCS,SAAAqE,GACbA,EAAEiB,iBADe,IAEVhF,EAAmBR,EAAnBQ,OAAOC,EAAYT,EAAZS,SACdqE,EAAS7B,GAAM,CAACzC,SAAOC,eAuCnBN,MAAOA,OC3DJsF,GARG,WACd,OACI,kBAAC,EAAD,KACI,kBAAC,GAAD,Q,UCiFGf,gBAjFI,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EACJC,mBAAS,IADL,mBACvBzE,EADuB,KAChB0E,EADgB,KAExBC,EAAWC,cAFa,EAIQC,aAAY,gBAAE1B,EAAF,EAAEA,KAAMU,EAAR,EAAQA,KAAR,MAAiB,CAC/DhE,KAAKsD,EAAKN,OACVM,KAAKA,EAAKA,KACVC,UAAUD,EAAKC,UACfS,KAAKA,EAAKA,SAJPhE,EAJuB,EAIvBA,KAAMsD,EAJiB,EAIjBA,KAAMC,EAJW,EAIXA,UAAWS,EAJA,EAIAA,KAkE9B,OA9BAiB,qBAAU,WACNH,EAAS/B,GAAe,aAC1B,CAAC+B,IAEHG,qBAAU,WACN,GAAG1B,EACC,OAA+B,MAA5BA,EAAU3B,SAAS8D,YAClBb,EAAS,qEAGbA,EAAS,6IAGVvB,IACCvB,QAAQC,IAAI,kBACZ8C,EAASb,SAEf,CAACX,EAAKC,EAAUuB,IAElBG,qBAAU,WACN,GAAGjB,EAAK,CACJW,EAAQQ,KAAK,KACb,IACId,aAAae,QAAQ,OAAOC,KAAKC,UAAUtB,IAC9C,MAAMO,GACHxC,QAAQC,IAAI,mCAGtB,CAAC2C,EAAQX,IAGP,kBAAC,EAAD,CACIjE,KAAK,SACLC,KAAMA,EACNC,SA/DS,SAAAsE,GAAK,IAAD,EACKA,EAAEgB,OAAjBlF,EADU,EACVA,KAAME,EADI,EACJA,MACbuE,EACIjC,GAAY,CACR7C,KAAK,SACL8C,IAAIzC,EACJE,YA0DJL,SArDS,SAAAqE,GACbA,EAAEiB,iBADe,IAEVhF,EAA4CR,EAA5CQ,OAAOC,EAAqCT,EAArCS,SAASC,EAA4BV,EAA5BU,gBAAgBC,EAAYX,EAAZW,SAEvC,IAAG,CAACH,EAAOC,EAASC,EAAgBC,GAAUgF,SAAS,IAIvD,OAAGlF,IAAWC,GACVmE,EAAS,qFACTC,EAASjC,GAAY,CAAC7C,KAAK,SAAS8C,IAAI,WAAWvC,MAAM,MACzDuE,EAASjC,GAAY,CAAC7C,KAAK,SAAS8C,IAAI,kBAAkBvC,MAAM,WAChE,GAAKqF,UAAUC,QAAQC,YAAYC,cAGvCjB,EAAS9B,GAAO,CAACxC,SAAOC,WAASE,cAV7BkE,EAAS,oEAiDT1E,MAAOA,OCvEJ6F,GARI,WACf,OACI,kBAAC,EAAD,KACI,kBAAC,GAAD,Q,8gBCFZ,IAAMC,GAAc3H,IAAOC,IAAV,MAQX2H,GAAU5H,IAAOC,IAAV,MAqCE4H,GAtBA,SAAC,GAAqB,IAApBnC,EAAmB,EAAnBA,KAAKoC,EAAc,EAAdA,SAClB,OACI,oCACI,kBAACH,GAAD,KACI,kBAACC,GAAD,KACI,kBAAC,IAAD,CAAM9F,UAAU,OAAOvB,GAAG,KACrBmF,EAAKA,EAAKrD,SAAS,KADxB,QAIIqD,EACI,kBAAC,EAAD,CAAQqC,QAASD,GAAjB,4BAEA,kBAAC,EAAD,CAAQvH,GAAG,UAAX,0BCpBb6F,gBAdS,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACfX,EAAQgB,aAAY,kBAAW,CAAChB,KAAZ,EAAEA,KAAoBA,SAA1CA,KACDc,EAAWC,cAOjB,OACI,kBAAC,GAAD,CAAQf,KAAMA,EAAMoC,SANP,WACbtB,EAAS1C,MACT8C,MAAM,4DACNP,EAAQQ,KAAK,W,mUCTrB,IAAMmB,GAAWhI,IAAOC,IAAV,MAIRgI,GAAUjI,YAAOI,IAAPJ,CAAH,MAkBEkI,GARH,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACV,OACI,kBAACH,GAAD,KACKG,EAAKC,KAAI,SAAAC,GAAG,OAAG,kBAACJ,GAAD,CAASzD,IAAK6D,EAAK9H,GAAE,gBAAW8H,IAAhC,IAAyCA,Q,wnBCjBrE,I,GAAMC,GAAgBtI,IAAOC,IAAV,MAIbsI,GAAavI,IAAOC,IAAV,MAYVuI,GAAWxI,IAAOC,IAAV,MAKRwI,GAAazI,IAAOC,IAAV,MAkCDyI,GA9BE,SAAC,GAAwC,IAAvC3E,EAAsC,EAAtCA,KAAKlC,EAAiC,EAAjCA,MAAMa,EAA2B,EAA3BA,QAASiG,EAAkB,EAAlBA,aAEnC,GAAG9G,EACC,OAAO,kBAACyG,GAAD,uEAGX,GAAG5F,IAAUqB,EACT,OAAO,KAP0C,IAU9C6E,EAAsC7E,EAAtC6E,MAAMC,EAAgC9E,EAAhC8E,KAAKV,EAA2BpE,EAA3BoE,KAAKzC,EAAsB3B,EAAtB2B,KAAKoD,EAAiB/E,EAAjB+E,cAE5B,OACI,kBAACR,GAAD,KACKK,EACD,kBAACJ,GAAD,KACI,wBAAIzG,UAAU,SAAS8G,GACvB,uBAAG9G,UAAU,QACT,2BAAI4D,EAAKxD,QADb,IAC0B,IAAI6G,KAAKD,GAAeE,uBAGtD,kBAACR,GAAD,CAAUS,wBAAyB,CAACC,OAAOL,KAC3C,kBAACJ,GAAD,KACI,kBAAC,GAAD,CAAKN,KAAMA,KAEdQ,I,gCC5CIQ,I,GALyCrG,GAAyB,kB,qBAA5EsG,G,MAAWC,G,MAAmBC,G,MAExBC,GAAWhH,YAAa6G,IAAU,SAAAI,GAAE,OAAEA,KAE7CC,GAAe1G,GAAkBqG,ICHf,SAAAI,GAAE,OAAI7F,GAAOkC,IAAP,qBAAyB2D,ODIhD,SAAUL,KAAV,iEACH,OADG,SACGrE,aAAWsE,GAAUK,IADxB,wCAIP,IAgBeC,GAXF/G,aAAa,kBAAC,GACtB0G,IAAmB,SAACzG,EAAD,OAAgBmB,EAAhB,EAAQV,QAAR,sBACbT,EADa,CAEhBmB,YAHkB,YAAC,GAKtBuF,IAAmB,SAAC1G,EAAD,OAAgBf,EAAhB,EAAQwB,QAAR,sBACbT,EADa,CAEhBf,aAPkB,IALL,CACjBkC,KAAK,KACLlC,MAAM,O,8sCEZV,IAAM8H,GAAiB3J,IAAOC,IAAV,MAUd2J,GAAa5J,IAAOC,IAAV,MAQV4J,GAAa7J,IAAO8J,GAAV,MAMVC,GAAe/J,IAAOC,IAAV,MAEZY,GAAcb,IAAOC,IAAV,MAMX+J,GAAgBvJ,YAAH,MAQbwJ,GAAYjK,YAAOkB,EAAPlB,CAAH,KACTgK,IAUAE,GAAalK,YAAOkB,EAAPlB,CAAH,KACVgK,IA+BSG,GA5BD,SAAC,GAQR,IAPHC,EAOE,EAPFA,QACAC,EAME,EANFA,UACAC,EAKE,EALFA,YAKE,IAJFC,kBAIE,MAJS,eAIT,MAHFC,mBAGE,MAHU,eAGV,EAFFC,EAEE,EAFFA,SACAC,EACE,EADFA,UAEA,OAAIN,EAEA,kBAACT,GAAD,KACI,kBAACC,GAAD,KACI,kBAACC,GAAD,KAAaQ,GACb,kBAACN,GAAD,KACI,6BACKO,GAEL,kBAAC,GAAD,KACI,kBAACL,GAAD,CAAWlC,QAAS0C,GAAWF,GAC/B,kBAACL,GAAD,CAAYnC,QAAS2C,GAAYF,OAXjC,MCpDTG,GAbK,SAAC,GAAoC,IAAnCP,EAAkC,EAAlCA,QAASM,EAAyB,EAAzBA,UAAWD,EAAc,EAAdA,SACtC,OACI,kBAAC,GAAD,CACIL,QAASA,EACTC,UAAU,kCACVC,YAAY,0FACZE,YAAY,eACZC,SAAUA,EACVC,UAAWA,K,+hBCNvB,I,GAAME,GAAoB5K,IAAOC,IAAV,MAIjB4K,GAAkBpK,YAAH,MAQfqK,GAAgB9K,YAAOkB,EAAPlB,CAAH,KACb6K,IAGAE,GAAgB/K,YAAOkB,EAAPlB,CAAH,KACb6K,IAsCSG,GA5BU,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,SAASC,EAAc,EAAdA,SAAc,EACP5E,oBAAS,GADF,mBACvC6E,EADuC,KAC1BC,EAD0B,KAgB9C,OACI,oCACI,kBAACR,GAAD,KACI,kBAACE,GAAD,CAAevK,GAAG,KAAlB,gBACA,kBAACwK,GAAD,CAAejJ,UAAU,OAAOiG,QAASkD,GAAzC,gBACA,kBAACF,GAAD,CAAejJ,UAAU,SAASiG,QAlBxB,WAClBqD,GAAgB,KAiBR,iBAEJ,kBAAC,GAAD,CAAahB,QAASe,EAAcV,SAhB3B,WACbW,GAAgB,IAe4CV,UAZ9C,WACdU,GAAgB,GAChBF,S,YCVSG,I,GA5B0CvI,GAAyB,oB,qBAA7EwI,G,MAAWC,G,MAAmBC,G,SAEyB1I,GAAyB,qB,qBAAhF2I,G,MAAYC,G,MAAoBC,G,MAE1BpH,GAAchC,YANN,sBAMgC,kBAAgB,CACjEiC,IADiD,EAAEA,IAEnDvC,MAFiD,EAAMA,UAK9C2J,GAAarJ,YAVR,oBAYLsJ,GAAYtJ,YAAa+I,IAAW,kBAAsB,CACnE1C,MAD6C,EAAEA,MAE/CC,KAF6C,EAAQA,KAGrDV,KAH6C,EAAaA,SAMjD2D,GAAkBvJ,YAhBL,2BAgBoC,SAAAwB,GAAI,OAAEA,KACvDgI,GAAaxJ,YAAakJ,IAAY,kBAAiC,CAChF7C,MAD+C,EAAEA,MAEjDC,KAF+C,EAAQA,KAGvDV,KAH+C,EAAaA,KAI5DqB,GAJ+C,EAAkBwC,eAO/DC,GAAgBlJ,GAAkBuI,IJ7Bf,SAAC,GAAD,IAAE1C,EAAF,EAAEA,MAAMC,EAAR,EAAQA,KAAKV,EAAb,EAAaA,KAAb,OACrBxE,GAAOI,KAAK,aAAa,CAAC6E,QAAMC,OAAKV,YI6BnC+D,GAAiBnJ,GAAkB0I,IJhBf,SAAC,GAAD,IAAEjC,EAAF,EAAEA,GAAGZ,EAAL,EAAKA,MAAMC,EAAX,EAAWA,KAAKV,EAAhB,EAAgBA,KAAhB,OACtBxE,GAAOwI,MAAP,qBAA2B3C,GAAK,CAACZ,QAAMC,OAAKV,YIiBzC,SAAUkD,KAAV,iEACH,OADG,SACGvG,aAAWwG,GAAWW,IADzB,OAEH,OAFG,SAEGnH,aAAW2G,GAAYS,IAF1B,wCAKP,IAAMnH,GAAc,CAChB6D,MAAM,GACNC,KAAK,GACLV,KAAK,GACLpE,KAAK,KACLqI,UAAU,KACVJ,WAAW,MAuCAK,GApCD1J,aAAa,kBAAC,GA5CP,sBA6CF,SAACC,EAAD,WAAQS,QAASmB,EAAjB,EAAiBA,IAAIvC,EAArB,EAAqBA,MAArB,sBACRW,EADQ,eAEV4B,EAAKvC,OAHa,YAAC,GA3CV,oBAgDD,kBAAI8C,MALM,YAAC,GAMvBuG,IAAY,SAAC1I,GAAD,sBACNA,EADM,CAETmB,KAAK,KACLqI,UAAU,UATS,YAAC,GAWvBb,IAAoB,SAAC3I,EAAD,OAAgBmB,EAAhB,EAAQV,QAAR,sBACdT,EADc,CAEjBmB,YAbmB,YAAC,GAevByH,IAAqB,SAAC5I,EAAD,OAAgBwJ,EAAhB,EAAQ/I,QAAR,sBACfT,EADe,CAElBwJ,iBAjBmB,YAAC,GAzCF,2BA4DF,SAACxJ,EAAD,OAAgBmB,EAAhB,EAAQV,QAAR,sBACbT,EADa,CAEhBgG,MAAM7E,EAAK6E,MACXC,KAAK9E,EAAK8E,KACVV,KAAKpE,EAAKoE,KACV6D,WAAWjI,EAAKuI,SAxBG,YAAC,GA0BvBZ,IAAqB,SAAC9I,EAAD,OAAgBmB,EAAhB,EAAQV,QAAR,sBACfT,EADe,CAElBmB,YA5BmB,YAAC,GA8BvB4H,IAAqB,SAAC/I,EAAD,OAAgBwJ,EAAhB,EAAQ/I,QAAR,sBACfT,EADe,CAElBwJ,iBAhCmB,IAkCzBrH,ICpCaqB,gBAtCW,SAAC,GAAqB,IAApBmG,EAAmB,EAAnBA,MAAMlG,EAAa,EAAbA,QACvBmG,EAAUD,EAAME,OAAhBD,OACDhG,EAAWC,cAF0B,EAGZC,aAAY,gBAAEgD,EAAF,EAAEA,KAAMhH,EAAR,EAAQA,QAAR,MAAoB,CAC3DqB,KAAK2F,EAAK3F,KACVlC,MAAM6H,EAAK7H,MACXa,QAAQA,EAAQ,sBAHbqB,EAHoC,EAGpCA,KAAMlC,EAH8B,EAG9BA,MAAOa,EAHuB,EAGvBA,QAMpBiE,qBAAU,WACNH,EAAS+C,GAASiD,MACpB,CAAChG,EAASgG,IAEZ,IAKMtB,EAAQ,wCAAG,sBAAAwB,EAAA,+ELPKlD,EKSGgD,ELRzB7I,GAAOgJ,OAAP,qBAA4BnD,IKMX,OAGT5C,MAAM,wEACNP,EAAQQ,KAAK,KAJJ,gDAMTpD,QAAQC,IAAR,MANS,kCLPK,IAAA8F,IKOL,oBAAH,qDAUd,OACI,kBAAC,GAAD,CACIzF,KAAMA,EACNlC,MAAOA,EACPa,QAASA,EACTiG,aAAc,kBAAC,GAAD,CAAkBsC,SApBvB,WACbzE,EAASsF,GAAgB/H,IACzBsC,EAAQQ,KAAK,WAkB2CqE,SAAUA,S,6TCvC1E,IAAM0B,GAAkB5M,IAAOC,IAAV,MAsBN4M,GANI,SAAC,GAAwB,IAAvBvM,EAAsB,EAAtBA,SAAYwM,EAAU,6BACvC,OACI,kBAACF,GAAoBE,EAAOxM,ICJrByM,GAZM,WACjB,OACI,oCACI,kBAAC,GAAD,MACA,kBAAC,GAAD,KACI,kBAAC,GAAD,S,qrBCJhB,IAAMC,GAAchN,IAAOC,IAAV,MAKXgN,GAAajN,IAAOqB,MAAV,MAcV6L,GAAalN,IAAOC,IAAV,MA4DDkN,GA7CA,SAAC,GAA2B,IAA1BvE,EAAyB,EAAzBA,MAAMC,EAAmB,EAAnBA,KAAKlH,EAAc,EAAdA,SAClByL,EAAeC,iBAAO,MACtBC,EAAgBD,iBAAO,MAE7B1G,qBAAU,WACN2G,EAAc/F,QAAU,IAAIgG,KAAMH,EAAa7F,QAAQ,CACnDiG,MAAM,SACNxL,YAAY,uDACZyL,QAAQ,CACJC,QAAQ,CACJ,CAAC,CAACC,OAAO,KAAK,CAACA,OAAO,MACtB,CAAC,OAAO,SAAS,YAAY,UAC7B,CAAC,CAACC,KAAK,WAAW,CAACA,KAAK,WACxB,CAAC,YAAY,aAAa,OAAO,aAK7C,IAAMC,EAAQP,EAAc/F,QAC5BsG,EAAMC,GAAG,eAAc,SAACC,EAAMC,EAASC,GACvB,SAATA,GACCtM,EAAS,CAAC6C,IAAI,OAAOvC,MAAM4L,EAAMK,KAAKC,iBAGhD,CAACxM,IAEH,IAAMyM,EAAUf,kBAAO,GACvB1G,qBAAU,WACHyH,EAAQ7G,UACX6G,EAAQ7G,SAAU,EAClB+F,EAAc/F,QAAQ2G,KAAKC,UAAUtF,KACvC,CAACA,IAMH,OACI,kBAACmE,GAAD,KACI,kBAACC,GAAD,CAAYxL,KAAK,OAAOO,YAAY,qDAAaD,KAAK,QAAQJ,SANhD,SAAAsE,GAClBtE,EAAS,CAAC6C,IAAI,QAAQvC,MAAMgE,EAAEgB,OAAOhF,SAKsDA,MAAO2G,IAC9F,kBAACsE,GAAD,CAAYmB,IAAKjB,MCpDdkB,GAtBS,WACpB,IAAM9H,EAAWC,cADS,EAELC,aAAY,gBAAE2F,EAAF,EAAEA,MAAF,MAAY,CACzCzD,MAAMyD,EAAMzD,MACZC,KAAKwD,EAAMxD,SAFRD,EAFmB,EAEnBA,MAAMC,EAFa,EAEbA,KAKPlH,EAAW4M,uBAAY,SAAAlL,GACzBmD,EAASjC,GAAYlB,MACvB,CAACmD,IAQH,OANAG,qBAAU,WACN,OAAM,WACFH,EAASoF,SAEf,CAACpF,IAGC,kBAAC,GAAD,CAAQ7E,SAAUA,EAAUiH,MAAOA,EAAOC,KAAMA,K,i9BCpBxD,IAAM2F,GAAcxO,IAAOC,IAAV,MAIXwO,GAAUzO,IAAO0B,KAAV,MAqBPgN,GAAc1O,IAAOqB,MAAV,MAOXsN,GAAU3O,IAAOC,IAAV,MAIP2O,GAAc5O,IAAOC,IAAV,MAiEF4O,GAtDA,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,aAAc3G,EAAU,EAAVA,KAAU,EACZ7B,mBAAS,IADG,mBAC9BjF,EAD8B,KACxB0N,EADwB,OAEJzI,mBAAS,IAFL,mBAE9B0I,EAF8B,KAEpBC,EAFoB,KAI/BC,EAAYX,uBAAY,SAAAlG,GAC1B,GAAIA,IACD2G,EAAU3H,SAASgB,GAAtB,CACA,IAAM8G,EAAO,uBAAOH,GAAP,CAAiB3G,IAC9B4G,EAAaE,GACbL,EAAaK,MACf,CAACH,EAAUF,IAEPnN,EAAW4M,uBAAY,SAAAtI,GACzB8I,EAAS9I,EAAEgB,OAAOhF,SACpB,IAEIL,EAAW2M,uBAAY,SAAAtI,GACzBA,EAAEiB,iBACFgI,EAAU7N,EAAM+N,QAChBL,EAAS,MACX,CAAC1N,EAAM6N,IAEHhE,EAAWqD,uBAAY,SAAAtH,GACzB,IAAMkI,EAAUH,EAAUK,QAAO,SAAAhH,GAAG,OAAEpB,IAASoB,KAC/C4G,EAAaE,GACbL,EAAaK,KACf,CAACH,EAAUF,IAMb,OAJAnI,qBAAU,WACNsI,EAAa9G,KACf,CAACA,IAGC,kBAACqG,GAAD,KACI,kBAACC,GAAD,CAAS7M,SAAUA,GACf,kBAAC8M,GAAD,CACIjN,KAAK,OACLQ,MAAOZ,EACPW,YAAY,oDACZL,SAAUA,IAEd,4BAAQF,KAAK,UAAb,iBAEL,kBAACkN,GAAD,KAESK,EAAU5G,KAAI,SAAAC,GAAG,OACb,kBAACuG,GAAD,CAAapK,IAAK6D,EAAKN,QAAS,kBAAImD,EAAS7C,KAA7C,IAAqDA,SC5E9DiH,GAhBS,WACpB,IAAM9I,EAAUC,cACV0B,EAAOzB,aAAY,qBAAE2F,MAAelE,QAS1C,OACI,kBAAC,GAAD,CAAQ2G,aARO,SAAAK,GACf3I,EAASjC,GAAY,CACjBC,IAAI,OACJvC,MAAMkN,MAK0BhH,KAAMA,K,wJCblD,IAAMoH,GAAyBvP,IAAOC,IAAV,MAmBbuP,GAXW,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,UAAUC,EAAqB,EAArBA,SAASC,EAAY,EAAZA,OAC3C,OACI,kBAACJ,GAAD,KACI,kBAAC,EAAD,CAAQxO,MAAM,QAAQgH,QAAS0H,GAA/B,sBACSE,EAAO,eAAK,gBAErB,kBAAC,EAAD,CAAQ/O,QAAM,EAACG,MAAM,OAAOgH,QAAS2H,GAArC,kBCuCGtJ,gBAlDoB,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAC3BG,EAAWC,cAD6B,EAEWC,aAAY,gBAAE2F,EAAF,EAAEA,MAAF,MAAY,CAC7EzD,MAAMyD,EAAMzD,MACZC,KAAKwD,EAAMxD,KACXV,KAAKkE,EAAMlE,KACXpE,KAAKsI,EAAMtI,KACXqI,UAAUC,EAAMD,UAChBJ,WAAWK,EAAML,eANdpD,EAFuC,EAEvCA,MAAOC,EAFgC,EAEhCA,KAAMV,EAF0B,EAE1BA,KAAMpE,EAFoB,EAEpBA,KAAMqI,EAFc,EAEdA,UAAWJ,EAFG,EAEHA,WA6B3CrF,qBAAU,WACN,GAAG5C,EAAK,CAAC,IACEuI,EAAWvI,EAAXuI,IAAI5G,EAAO3B,EAAP2B,KACXW,EAAQQ,KAAR,YAAkBnB,EAAKxD,OAAvB,YAAiCoK,IAElCF,GACC3I,QAAQC,IAAI0I,KAElB,CAAC/F,EAAQtC,EAAKqI,IAMhB,OACI,kBAAC,GAAD,CAAmBqD,UAnCL,WAEVjJ,EADDwF,EACUD,GAAW,CAChBnD,QACAC,OACAV,OACA6D,eAMJH,GAAU,CACNjD,QACAC,OACAV,WAoBiCuH,SAL5B,WACbrJ,EAAQuJ,UAIqDD,OAAQ3D,OCjC9D6D,GAbO,WAClB,OACI,oCACI,kBAAC,GAAD,MACA,kBAAC,GAAD,KACI,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,S,grBCVhB,IAAMC,GAAc9P,IAAOC,IAAV,MASX8P,GAAc/P,IAAOC,IAAV,MA4CF+P,GAjBA,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,gBACb,OACI,kBAACH,GAAD,KACI,kBAACC,GAAD,KACI,yBAAKjO,UAAU,WAAW,KAC1B,yBAAKA,UAAU,iBACX,uBAAGA,UAAU,cAAb,mEACA,uBAAGA,UAAU,cAAb,0EAEJ,yBAAKA,UAAU,WAAW,MAG7BmO,GAAiB,kBAAC,EAAD,CAAQ1P,GAAG,SAASQ,MAAM,SAA1B,kD,ujCC7C9B,I,GAAMmP,GAAgBlQ,IAAOC,IAAV,MAKbY,GAAcb,IAAOC,IAAV,MAOXkQ,GAAenQ,IAAOoQ,GAAV,MAKZC,GAAgBrQ,IAAOsQ,GAAV,MAYbC,GAAWvQ,IAAOC,IAAV,MAKRuQ,GAAcxQ,YAAOI,IAAPJ,CAAH,MAUXwI,GAAWxI,IAAOC,IAAV,MAKRwQ,GAAW,SAAC,GAAY,IAAX1M,EAAU,EAAVA,KACf,OACI,kBAACsM,GAAD,KACI,kBAACE,GAAD,KAAW,IAAIxH,KAAKhF,EAAK+E,eAAeE,sBACxC,kBAAC,GAAD,CAAKxE,IAAG,cAAST,EAAKyF,IAAMrB,KAAMpE,EAAKoE,OACvC,kBAACqI,GAAD,CAAajQ,GAAE,WAAMwD,EAAK2B,KAAKxD,OAAhB,YAA0B6B,EAAKuI,MAAQvI,EAAK6E,OAC3D,kBAAC,GAAD,KAAW7E,EAAK8E,QAkCb6H,GA7BE,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,MAAM9O,EAAmC,EAAnCA,MAAMa,EAA6B,EAA7BA,QAAQuN,EAAqB,EAArBA,gBAEnC,OAAGpO,EACQ,kBAACqO,GAAD,iCAGRxN,IAAYiO,EACJ,KACFA,EAAMC,QAAQ,EACZ,kBAAC,GAAD,CAAQX,gBAAiBA,IAIhC,kBAACC,GAAD,KACKD,GAEG,kBAAC,GAAD,KACI,kBAAC,EAAD,CAAQ1P,GAAG,UAAX,6BAGR,kBAAC4P,GAAD,KAEQQ,EAAMvI,KAAI,SAAArE,GAAI,OAAG,kBAAC,GAAD,CAAUS,IAAKT,EAAKuI,IAAKvI,KAAMA,U,YC3EnD8M,I,GATyC/N,GAAyB,kB,qBAA5EgO,G,MAAWC,G,MAAmBC,G,MAExBC,GAAW1O,YAAauO,IAAU,kBAAsB,CACjEI,KAD2C,EAAEA,KAE7ChP,OAF2C,EAAOA,OAGlDmG,IAH2C,EAAcA,QAMvD8I,GAAepO,GAAkB+N,IjBLf,SAAC,GAAqB,IAApBI,EAAmB,EAAnBA,KAAKhP,EAAc,EAAdA,OAAOmG,EAAO,EAAPA,IAC5B+I,EAAcC,KAAGrK,UAAU,CAC7BkK,OACAhP,SACAmG,QAEJ,OAAO1E,GAAOkC,IAAP,qBAAyBuL,OiBA7B,SAAUP,KAAV,iEACH,OADG,SACG/L,aAAWgM,GAAUK,IADxB,wCAIP,IAkBevD,GAZFjL,aAAa,kBAAC,GACtBoO,IAAmB,SAACnO,EAAD,OAAgB+N,EAAhB,EAAQtN,QAAmBC,EAA3B,EAAsBE,KAAtB,sBACbZ,EADa,CAEhB+N,QACAW,SAASC,SAASjO,EAASkO,QAAQ,aAAa,SAJ9B,YAAC,GAMtBR,IAAmB,SAACpO,EAAD,OAAgBf,EAAhB,EAAQwB,QAAR,sBACbT,EADa,CAEhBf,aARkB,IANL,CACjB8O,MAAM,KACN9O,MAAM,KACNyP,SAAS,ICSElL,gBAtBW,SAAC,GAAgB,IAAfqL,EAAc,EAAdA,SAClBjL,EAAWC,cADqB,EAEAC,aAAY,gBAAEkH,EAAF,EAAEA,KAAKlL,EAAP,EAAOA,QAAQgD,EAAf,EAAeA,KAAf,MAAwB,CACtEiL,MAAM/C,EAAK+C,MACX9O,MAAM+L,EAAK/L,MACXa,QAAQA,EAAQ,kBAChBgD,KAAKA,EAAKA,SAJPiL,EAF+B,EAE/BA,MAAO9O,EAFwB,EAExBA,MAAOa,EAFiB,EAEjBA,QAASgD,EAFQ,EAERA,KAe9B,OARAiB,qBAAU,WAAK,IACJzE,EAAUwD,EAAVxD,OADG,EAESmP,KAAGK,MAAMD,EAASE,OAAO,CACxCC,mBAAkB,IADfV,EAFG,EAEHA,KAAK7I,EAFF,EAEEA,IAGZ7B,EAASyK,GAAS,CAACC,OAAKhP,SAAOmG,WACjC,CAAC7B,EAASiL,EAASE,OAAOjM,IAGxB,kBAAC,GAAD,CAAUiL,MAAOA,EAAO9O,MAAOA,EAAOa,QAASA,EAASuN,gBAAiBvK,O,gOCrBjF,IAAMmM,GAAkB7R,IAAOC,IAAV,MAuCN6R,GA5BI,SAAC,GAAgC,IAA/BR,EAA8B,EAA9BA,SAASpP,EAAqB,EAArBA,OAAOmG,EAAc,EAAdA,IAAI6I,EAAU,EAAVA,KAE/Ba,EAAY,SAAC7P,EAAOmG,EAAI6I,GAC1B,IAAMc,EAAQX,KAAGrK,UAAU,CAACqB,MAAI6I,SAChC,OAAOhP,EAAO,KAAD,OAAMA,EAAN,YAAgB8P,GAAhB,YAA6BA,IAG9C,OAAc,IAAXV,EAAqB,KAGpB,kBAACO,GAAD,KACI,kBAAC,EAAD,CACII,SAAiB,IAAPf,EACV3Q,GAAW,IAAP2Q,OAASgB,EAAUH,EAAU7P,EAAOmG,EAAI6I,EAAK,IAFrD,gBAMA,yBAAKpP,UAAU,WAAWoP,EAA1B,MAAmCI,GACnC,kBAAC,EAAD,CACIW,SAAUf,IAAOI,EACjB/Q,GAAI2Q,IAAOI,OAASY,EAAUH,EAAU7P,EAAOmG,EAAI6I,EAAK,IAF5D,kBCPG9K,gBArBa,SAAC,GAAsB,IAArBqL,EAAoB,EAApBA,SAASlF,EAAW,EAAXA,MAAW,EAEX7F,aAAY,gBAAEkH,EAAF,EAAEA,KAAMlL,EAAR,EAAQA,QAAR,MAAoB,CAC/DiO,MAAM/C,EAAK+C,MACXW,SAAS1D,EAAK0D,SACd5O,QAAQA,EAAQ,sBAHbiO,EAFuC,EAEvCA,MAAOW,EAFgC,EAEhCA,SAAU5O,EAFsB,EAEtBA,QAMxB,IAAIiO,GAASjO,EAAS,OAAO,KARiB,IAUvCR,EAAUqK,EAAME,OAAhBvK,OAVuC,EAYzBmP,KAAGK,MAAMD,EAASE,OAAO,CAC1CC,mBAAkB,IADfvJ,EAZuC,EAYvCA,IAZuC,IAYnC6I,YAZmC,MAY9B,EAZ8B,EAgB9C,OACI,kBAAC,GAAD,CAAYI,SAAUA,EAAUpP,OAAQA,EAAQmG,IAAKA,EAAK6I,KAAMK,SAASL,QCLlEiB,GAZM,WACjB,OACI,oCACI,kBAAC,GAAD,MACA,kBAAC,GAAD,KACI,kBAAC,GAAD,MACA,kBAAC,GAAD,S,+lECLhB,IAAMC,GAAkBpS,IAAOC,IAAV,MAMfoS,GAAOrS,IAAOC,IAAV,MAWJqS,GAAY7R,YAAH,MAgBT8R,GAAWvS,IAAOC,IAAV,KACRqS,IASAE,GAAYxS,IAAOC,IAAV,KACTqS,IAsBAG,GAAezS,YAAOkB,EAAPlB,CAAH,MAUZ0S,GAAYjS,YAAH,MAgBTkS,GAAS3S,YAAO4S,KAAP5S,CAAH,KACN0S,IAOAG,GAAW7S,YAAO8S,KAAP9S,CAAH,KACR0S,IA8ESK,GAvEI,WACf,IADqB,EAGYzM,mBAAS,GAHrB,mBAGd0M,EAHc,KAGJC,EAHI,OAIU3M,mBAAS,GAJnB,mBAId4M,EAJc,KAILC,EAJK,OAKQ7M,oBAAS,GALjB,mBAKd8M,EALc,KAKNC,EALM,OAMY/M,oBAAS,GANrB,mBAMdgN,EANc,KAMJC,EANI,KAQrB5M,qBAAU,WACN,IAAM6M,EAAUC,aAAY,WACxBC,MACF,KAEF,OAAO,WACHC,cAAcH,OAItB7M,qBAAU,WAEF0M,EADU,IAAXH,GAOCK,GADW,MAAZL,KAKL,CAACA,IAEH,IAAMQ,EAAa,WACDT,EAAF,IAAZD,EAA2BA,EAAU,EAAgBA,EAAU,IAWnE,OACI,kBAACZ,GAAD,KACI,kBAACC,GAAD,CAAMuB,MAAO,CAACC,UAAU,GAAD,OAAIX,EAAJ,QACnB,kBAACX,GAAD,SA9CQ,CAAC,eAAK,gBA+CIS,GADlB,8BAGA,kBAACR,GAAD,SAhDQ,CAAC,eAAK,gBAiDIQ,GADlB,wBAIJ,kBAACX,GAAD,KACI,kBAACE,GAAD,sBAGA,kBAACC,GAAD,KACI,yBAAK1Q,UAAU,WACX,yBAAKA,UAAU,gBAAf,+EAA8C,6BAA9C,0EACA,kBAAC2Q,GAAD,CAAclS,GAAG,UAAjB,4CAIZ,kBAACoS,GAAD,CAAQ7Q,UAAWgS,KAAG,CAACC,KAAKX,IAAWrL,QA7B5B,WACfoL,EAAYD,EAAS,QA6BjB,kBAACL,GAAD,CAAU/Q,UAAWgS,KAAG,CAACC,KAAKT,IAAavL,QA1B9B,WACjBoL,EAAYD,EAAS,UC/Idc,GATQ,WACnB,OACI,oCACI,kBAAC,GAAD,MACA,kBAAC,GAAD,QCaGC,GAhBE,WAKb,OAJevN,aAAY,kBAAW,CAClChB,KADuB,EAAEA,KACfA,SADPA,KAMC,kBAAC,GAAD,MAIA,kBAAC,GAAD,OCKGwO,GAZH,WACV,OACE,oCACE,kBAAC,IAAD,CAAOC,UAAWF,GAAUG,KAAM,CAAC,cAAc,KAAMC,OAAK,IAC5D,kBAAC,IAAD,CAAOF,UAAWhN,GAAWiN,KAAK,WAClC,kBAAC,IAAD,CAAOD,UAAWzM,GAAY0M,KAAK,YACnC,kBAAC,IAAD,CAAOD,UAAWpH,GAAcqH,KAAK,wBACrC,kBAAC,IAAD,CAAOD,UAAWtE,GAAeuE,KAAK,aCJxBE,QACW,cAA7BC,OAAO9C,SAAS+C,UAEe,UAA7BD,OAAO9C,SAAS+C,UAEhBD,OAAO9C,SAAS+C,SAASjI,MACvB,2D,kCCAWkI,IAAV,SAAUA,KAAV,iEACH,OADG,SACGC,aAAI,CAAC1Q,KAAWqB,KAAWgG,KAAYlC,KAAW0H,OADrD,wCAIQ8D,OAbKC,2BAAgB,CAChC5P,QACAtC,UACAgD,QACA2G,SACA3C,QACAkE,U,SCFEiH,GAAiBC,eACjBC,GAAQC,uBAAYL,GAAYM,+BAAoBC,2BAAgBL,MAc1EA,GAAeM,IAAIV,IAZnB,WACE,IACE,IAAM/O,EAAOK,aAAaqP,QAAQ,QAC/B1P,IACDqP,GAAMvO,SAASf,GAAYC,IAC3BqP,GAAMvO,SAASb,OAElB,SACClC,QAAQC,IAAI,gCAKhB2R,GAEAC,IAASC,OACP,kBAAC,IAAD,CAAUR,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJS,SAASC,eAAe,SF8FpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAnU,GACL4B,QAAQ5B,MAAMA,EAAMoU,a","file":"static/js/main.5678529e.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst AuthTempleteBlock = styled.div`\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background-color:#FAFAFA;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n`;\n\nconst WhiteBox = styled.div`\n    width: 450px;\n    background-color:#ffffff;\n    text-align:center;\n    padding: 30px 0;\n    box-shadow:0 0 8px rgba(0,0,0,0.1);\n`;\n\nconst Logo = styled(Link)`\n    font-weight:bold;\n    font-size:30px;\n    font-style:italic;\n`;\n\nconst AuthTemplete = ({children}) => {\n    return (\n        <AuthTempleteBlock>\n            <WhiteBox>\n                <Logo to=\"/\">My.log</Logo>\n                {children}\n            </WhiteBox>\n        </AuthTempleteBlock>\n    );\n};\n\nexport default AuthTemplete;","import React from 'react';\nimport styled,{css} from 'styled-components';\nimport {Link} from 'react-router-dom';\n\nconst ButtonStyle = css`\n    background-color:#045FB4;\n    border:none;\n    outline:none;\n    cursor: pointer;\n    color:white;\n    border-radius: 4px;\n    font-weight: bold;\n    font-size: 15px;\n    width: 90px;\n    height: 35px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    &:hover{\n        background-color: #0174DF;\n    }\n\n    &:disabled{\n        background: #A4A4A4;\n        cursor:not-allowed;\n    }\n`;\n\nconst customStyle = css`\n    ${props=>\n        props.color1&&\n        css`\n            background:#585858;\n            &:hover{\n                background:#848484;\n            }\n        `\n    }\n`;\n\nconst ButtonBlock = styled.button`\n    ${ButtonStyle}\n    ${customStyle}\n\n    ${props=>\n        props.width&&\n        css`\n            width:${props.width};\n        `\n    }\n    ${props=>\n        props.height&&\n        css`\n            height:${props.height};\n        `\n    }\n`;\n\nconst LinkBlock = styled(Link)`\n    ${ButtonStyle}\n    ${customStyle}\n\n    ${props=>\n        props.width&&\n        css`\n            width:${props.width};\n        `\n    }\n\n    ${props=>\n        props.height&&\n        css`\n            height:${props.height};\n        `\n    }\n`;\n\nconst Button = props => {\n    return (\n        props.to?(\n            <LinkBlock {...props}/>\n        ):(\n            <ButtonBlock {...props}/>\n        )\n        \n    );\n};\n\nexport default Button;","import React from 'react';\nimport styled from 'styled-components';\nimport {Link} from 'react-router-dom';\nimport Button from '../common/Button';\n\nconst AuthFormBlock = styled.div`\n    padding: 20px 40px 0;\n    .type_text{\n        font-size: 20px;\n        text-align: left;\n    }\n`;\n\nconst InputBox = styled.input`\n    width: 100%;\n    border:none;\n    border-bottom:1px solid #A4A4A4;\n    font-size: 15px;\n    margin-bottom: 20px;\n`;\n\nconst AuthFooter = styled.div`\n    margin:20px 0;\n    a{\n        color:#868e96;\n        font-size: 13px;\n        &:hover{\n            color:#212529;\n        }\n    }\n`;\n\nconst ErrorBox = styled.div`\n    color:red;\n    font-size: 13px;\n    margin-bottom: 10px;\n`;\n\nconst AuthForm = ({type, form, onChange, onSubmit, error}) => {\n    return (\n        <AuthFormBlock>\n            <h1 className=\"type_text\">\n                {type==='login'?'로그인':'회원가입'}\n            </h1>\n            <form onSubmit={onSubmit}>\n                <InputBox name=\"userid\" type=\"text\" placeholder=\"아이디\" value={form.userid} onChange={onChange}/>\n                <InputBox name=\"password\" type=\"password\" placeholder=\"패스워드\" value={form.password} onChange={onChange}/>\n                {type==='signup'&&(\n                    <InputBox name=\"passwordConfirm\" type=\"password\" placeholder=\"패스워드 확인\" value={form.passwordConfirm} onChange={onChange}/>\n                )}\n                {type==='signup'&&(\n                    <InputBox name=\"username\" type=\"text\" placeholder=\"이름\" value={form.username} onChange={onChange}/>\n                )}\n                {error&&<ErrorBox>{error}</ErrorBox>}\n                <Button width=\"100%\" height=\"40px\">\n                    {type==='login'?'로그인':'회원가입'}\n                </Button>\n            </form>\n            <AuthFooter>\n                {type==='login'?\n                    (<Link to=\"/signup\">회원가입</Link>)\n                    :\n                    (<Link to=\"/login\">로그인</Link>)\n                }\n            </AuthFooter>\n        </AuthFormBlock>\n    );\n};\n\nexport default AuthForm;","import { createAction, handleActions } from \"redux-actions\";\n\nconst START_LOADING = 'loading/START_LOADING';\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\n\nexport const startLoading = createAction(\n    START_LOADING,\n    requestType => requestType\n);\n\nexport const finishLoading = createAction(\n    FINISH_LOADING,\n    requestType => requestType\n);\n\nconst initialState ={};\n\nconst loading = handleActions(\n    {\n        [START_LOADING]:(state,action)=>({\n            ...state,\n            requestType:true,\n        }),\n        [FINISH_LOADING]:(state,action)=>({\n            ...state,\n            requestType:false,\n        }),\n    },\n    initialState\n);\n\nexport default loading;","import { startLoading, finishLoading } from \"../modules/loading\";\nimport {put, call} from 'redux-saga/effects';\n\nexport const createRequestActionTypes = type => {\n    const SUCCESS = `${type}_SUCCESS`;\n    const FAILURE = `${type}_FAILURE`;\n\n    return [type, SUCCESS, FAILURE];\n};\n\nexport default function createRequestSaga(type,request){\n    const SUCCESS = `${type}_SUCCESS`;\n    const FAILURE = `${type}_FAILURE`;\n\n    return function*(action){\n        yield put(startLoading(type));\n        try{\n            const response = yield call(request,action.payload);\n            yield put({\n                type:SUCCESS,\n                payload:response.data,\n                meta:response,\n            });\n        }catch(e){\n            console.log(e);\n            yield put({\n                type:FAILURE,\n                payload:e,\n                error:true,\n            });\n        }\n        yield put(finishLoading(type));\n    };\n};","import axios from \"axios\";\n\nconst client = axios.create();\n\n/*\n    글로벌 설정 예시:\n    //API 주소를 다른곳으로 사용함\n    clent.defaults.baseURL ='https://external-api-server.com/'\n\n    //헤더 설정\n    client.default.headers.common['Authorization'] = 'Bearer a1b2c3d4';\n\n    //인터셉터 설정\n    axios.intercepter.response.use(\\\n        response =>{\n            //요청 성공 시 특정작업 수행\n            return response;\n        },\n        error => {\n            //요청 실패 시 특정 작업 수행\n        }\n    })\n*/\n\nexport default client;","import client from \"./client\"\n\nexport const login = ({userid,password})=>\n    client.post(\"/api/auth/login\",{userid,password});\n\n\nexport const signup = ({userid,password,username})=>\n    client.post(\"/api/auth/signup\",{userid,password,username});\n\n\nexport const check = () =>\n    client.get(\"/api/auth/check\");\n\nexport const logout = () =>\n    client.post(\"/api/auth/logout\");","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport createRequestSaga, { createRequestActionTypes } from \"../lib/createRequestSaga\";\nimport * as authAPI from \"../lib/api/auth\";\nimport {takeLatest} from \"redux-saga/effects\";\n\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\n\nconst [SIGNUP, SIGNUP_SUCCESS, SIGNUP_FAILURE] = createRequestActionTypes('auth/SIGNUP');\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes('auth/LOGIN');\n\n\nexport const changeField = createAction(\n    CHANGE_FIELD,\n    ({form,key,value})=>({\n        form,\n        key,\n        value,\n    }),\n);\n\nexport const initializeForm = createAction(INITIALIZE_FORM,form=>form);\n\nexport const signup = createAction(SIGNUP,({userid,password,username})=>({\n    userid,\n    password,\n    username\n}));\n\nexport const login = createAction(LOGIN,({userid,password})=>({\n    userid,\n    password\n}));\n\n//사가 생성\nconst signupSaga = createRequestSaga(SIGNUP,authAPI.signup);\nconst loginSaga = createRequestSaga(LOGIN,authAPI.login);\n\nexport function* authSaga(){\n    yield takeLatest(SIGNUP,signupSaga);\n    yield takeLatest(LOGIN,loginSaga);\n}\n\nconst initialState ={\n    login:{\n        userid:'',\n        password:''\n    },\n    signup:{\n        userid:'',\n        password:'',\n        passwordConfirm:'',\n        username:'',\n    },\n    auth:null,\n    authError:null\n};\n\nconst auth = handleActions(\n    {\n        [CHANGE_FIELD]:(state,{payload:{form,key,value}})=>\n            produce(state,draft=>{\n                draft[form][key]=value;\n            }),\n        [INITIALIZE_FORM]:(state,{payload:form})=>({\n            ...state,\n            [form]:initialState[form],\n            authError:null\n        }),\n        [SIGNUP_SUCCESS]:(state,{payload:auth})=>({\n            ...state,\n            authError:null,\n            auth,\n        }),\n        [SIGNUP_FAILURE]:(state,{payload:error})=>({\n            ...state,\n            authError:error,\n        }),\n        [LOGIN_SUCCESS]:(state,{payload:auth})=>({\n            ...state,\n            authError:null,\n            auth,\n        }),\n        [LOGIN_FAILURE]:(state,{payload:error})=>({\n            ...state,\n            authError:error,\n        })\n    },\n    initialState\n)\n\nexport default auth;","import createRequestSaga, {createRequestActionTypes} from \"../lib/createRequestSaga\";\nimport { createAction, handleActions } from \"redux-actions\";\nimport * as authAPI from \"../lib/api/auth\";\nimport {takeLatest, call} from 'redux-saga/effects';\n\nconst TEMT_SET_USER = \"user/TEMP_SET_USER\";\nconst [CHECK,CHECK_SUCCESS,CHECK_FAILURE] = createRequestActionTypes(\"user/CHECK\");\nconst LOGOUT= 'auth/LOGOUT';\n\nexport const tempSetUser = createAction(TEMT_SET_USER,user=>user);\nexport const check = createAction(CHECK);\nexport const logout = createAction(LOGOUT);\n\nconst initialState = {\n    user:null,\n    checkError:null,\n};\n\nconst checkSaga = createRequestSaga(CHECK,authAPI.check);\nfunction checkFailureSaga(){\n    try{\n        localStorage.removeItem(\"user\");\n    }catch(e){\n        console.log(e);\n    }\n};\n\nfunction* logoutSaga(){\n    try{\n        yield call(authAPI.logout);\n        localStorage.removeItem(\"user\");\n    }catch(e){\n        console.log(e);\n    }\n}\n\nexport function* userSaga(){\n    yield takeLatest(CHECK,checkSaga);\n    yield takeLatest(CHECK_FAILURE,checkFailureSaga);\n    yield takeLatest(LOGOUT,logoutSaga);\n}\n\nexport default handleActions({\n    [TEMT_SET_USER]:(state,{payload:user})=>({\n        ...state,\n        user,\n    }),\n    [CHECK_SUCCESS]:(state,{payload:user})=>({\n        ...state,\n        user,\n        checkError:null,\n    }),\n    [CHECK_FAILURE]:(state,{payload:error})=>({\n        ...state,\n        user:null,\n        checkError:error,\n    }),\n    [LOGOUT]:state=>({\n        ...state,\n        user:null,\n    })\n},initialState);","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { changeField, initializeForm, login } from '../../modules/auth';\nimport { check } from '../../modules/user';\nimport { withRouter } from 'react-router-dom';\n\nconst LoginForm = ({history}) => {\n    const [error, setError] = useState('');\n    const dispatch = useDispatch();\n\n    const {form, auth, authError, user} = useSelector(({auth,user})=>({\n        form:auth.login,\n        auth:auth.auth,\n        authError:auth.authError,\n        user:user.user,\n    }));\n\n    const onChange = e =>{\n        const {name, value} = e.target;\n        dispatch(\n            changeField({\n                form:'login',\n                key:name,\n                value\n            })\n        );\n    };\n\n    const onSubmit = e =>{\n        e.preventDefault();\n        const {userid,password} = form;\n        dispatch(login({userid,password}));\n    };\n\n    useEffect(()=>{\n        dispatch(\n            initializeForm('login')\n        );\n    },[dispatch]);\n\n    useEffect(()=>{\n        if(authError){\n            setError(\"가입하지 않은 아이디이거나, 잘못된 비밀번호입니다.\");\n            return;\n        }\n        if(auth){\n            console.log(\"Success Login\");\n            dispatch(check());\n        }\n    },[authError,auth,dispatch]);\n\n    useEffect(()=>{\n        if(user){\n            console.log(\"Success CHECK api\");\n            alert(`${user.username}님 안녕하세요!`);\n            history.push(\"/\");\n            try{\n                localStorage.setItem(\"user\",JSON.stringify(user));\n            }catch(e){\n                console.log(\"localStorage is not working\");\n            }\n        }\n    },[user,history]);\n\n    return (\n        <AuthForm\n            type=\"login\"\n            form={form}\n            onChange={onChange}\n            onSubmit={onSubmit}\n            error={error}\n        />\n    );\n};\n\nexport default withRouter(LoginForm);","import React from 'react';\nimport AuthTemplete from '../components/auth/AuthTemplete';\nimport LoginForm from '../containers/auth/LoginForm';\n\nconst LoginPage = () => {\n    return (\n        <AuthTemplete>\n            <LoginForm/>\n        </AuthTemplete>\n    );\n};\n\nexport default LoginPage;","import React, { useEffect,useState } from 'react';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField, initializeForm, signup } from '../../modules/auth';\nimport { check } from '../../modules/user';\nimport { withRouter } from 'react-router-dom';\n\nconst SignUpForm = ({history}) => {\n    const [error, setError] = useState('');\n    const dispatch = useDispatch();\n\n    const {form, auth, authError, user} = useSelector(({auth, user})=>({\n        form:auth.signup,\n        auth:auth.auth,\n        authError:auth.authError,\n        user:user.user,\n    }));\n\n    const onChange = e =>{\n        const {name, value} = e.target;\n        dispatch(\n            changeField({\n                form:'signup',\n                key:name,\n                value\n            })\n        );\n    };\n\n    const onSubmit = e =>{\n        e.preventDefault();\n        const {userid,password,passwordConfirm,username} = form;\n\n        if([userid,password,passwordConfirm,username].includes('')){\n            setError(\"빈칸을 모두 입력하세요.\");\n            return;\n        }\n        if(password!==passwordConfirm){\n            setError(\"비밀번호가 일치하지 않습니다.\");\n            dispatch(changeField({form:\"signup\",key:\"password\",value:''}));\n            dispatch(changeField({form:\"signup\",key:\"passwordConfirm\",value:''}));\n            this.signUpRef.current.passwordRef.focus();\n            return;\n        }\n        dispatch(signup({userid,password,username}));\n    };\n\n    useEffect(()=>{\n        dispatch(initializeForm('signup'));\n    },[dispatch]);\n\n    useEffect(()=>{\n        if(authError){\n            if(authError.response.status===409){\n                setError(\"이미 사용중인 ID 입니다.\");\n                return;\n            }\n            setError(\"회원가입에 실패하였습니다. 관리자에게 문의하세요.\");\n            return;\n        }\n        if(auth){\n            console.log(\"Success SignUp\");\n            dispatch(check());\n        }\n    },[auth,authError,dispatch]);\n\n    useEffect(()=>{\n        if(user){\n            history.push(\"/\");\n            try{\n                localStorage.setItem(\"user\",JSON.stringify(user));\n            }catch(e){\n                console.log(\"localStorage is not working\");\n            }\n        }\n    },[history,user]);\n\n    return (\n        <AuthForm\n            type='signup'\n            form={form}\n            onChange={onChange}\n            onSubmit={onSubmit}\n            error={error}\n        />\n    );\n};\n\nexport default withRouter(SignUpForm);","import React from 'react';\nimport AuthTemplete from '../components/auth/AuthTemplete';\nimport SignUpForm from '../containers/auth/SignUpForm';\n\nconst SignUpPage = () => {\n    return (\n        <AuthTemplete>\n            <SignUpForm/>\n        </AuthTemplete>\n    );\n};\n\nexport default SignUpPage;","import React from 'react';\nimport styled from 'styled-components';\nimport Button from './Button';\nimport { Link } from 'react-router-dom';\n\nconst HeaderBlock = styled.div`\n    position:fixed;\n    width:100%;\n    background-color:white;\n    box-shadow: 0px 1px 3px rgb(0,0,0,0.2);\n    z-index:999;\n`;\n\nconst Wrapper = styled.div`\n    height: 60px;\n    padding: 15px;\n    display:flex;\n    align-items:center;\n    justify-content:space-between;\n\n    .logo{\n        font-size: 18px;\n        font-weight:bold;\n        letter-spacing:2px;\n        font-style:italic;\n    }\n`;\n\nconst Header = ({user,onLogout}) => {\n    return (\n        <>\n            <HeaderBlock>\n                <Wrapper>\n                    <Link className=\"logo\" to=\"/\">\n                        {user?user.username:\"My\"}.log\n                    </Link>\n                    {\n                        user?(\n                            <Button onClick={onLogout}>로그아웃</Button>\n                        ):(\n                            <Button to=\"/login\">로그인</Button>\n                        )\n                    }\n                    \n                </Wrapper>\n            </HeaderBlock>\n        </>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport Header from '../../components/common/Header';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {logout} from '../../modules/user';\nimport {withRouter} from 'react-router-dom';\n\nconst HeaderContainer = ({history}) => {\n    const {user} = useSelector(({user})=>({user:user.user}));\n    const dispatch = useDispatch();\n\n    const onLogout = () =>{\n        dispatch(logout());\n        alert(\"로그아웃 되었습니다.\");\n        history.push(\"/\");\n    }\n    return (\n        <Header user={user} onLogout={onLogout}/>\n    );\n};\n\nexport default withRouter(HeaderContainer);","import React from 'react';\nimport styled from 'styled-components';\nimport {Link} from 'react-router-dom';\n\nconst TagBlock = styled.div`\n    margin-top:5px;\n`;\n\nconst TagItem = styled(Link)`\n    padding-right:10px;\n    color:#045FB4;\n    display: inline-block;\n    word-break: break-all;\n    &:hover{\n        color: #0174DF;\n    }\n`;\n\nconst Tag = ({tags}) => {\n    return (\n        <TagBlock>\n            {tags.map(tag=>(<TagItem key={tag} to={`/?tag=${tag}`}>#{tag}</TagItem>))}\n        </TagBlock>\n    );\n};\n\nexport default Tag;","import React from 'react';\nimport styled from 'styled-components';\nimport Tag from '../List/Tag';\n\nconst PostViewBlock = styled.div`\n    padding: 60px 0;\n`;\n\nconst PostHeader = styled.div`\n    .title{\n        border-bottom: 1px solid lightgray;\n        margin: 0;\n        padding: 20px 0 10px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n    }\n    .info{\n        text-align: right;\n    }\n`;\nconst PostBody = styled.div`\n    min-height:400px;\n    overflow: hidden;\n    word-break: break-all;\n`;\nconst PostFooter = styled.div`\n    margin:10px 0;\n`;\n\nconst PostView = ({post,error,loading, actionButton}) => {\n\n    if(error){\n        return <PostViewBlock>에러가 발생하였습니다.</PostViewBlock>\n    }\n\n    if(loading||!post){\n        return null;\n    }\n\n    const {title,body,tags,user,publishedData} = post;\n\n    return (\n        <PostViewBlock>\n            {actionButton}\n            <PostHeader>\n                <h1 className=\"title\">{title}</h1>\n                <p className=\"info\">\n                    <b>{user.userid}</b> {new Date(publishedData).toLocaleDateString()}\n                </p>\n            </PostHeader>\n            <PostBody dangerouslySetInnerHTML={{__html:body}}/>\n            <PostFooter>\n                <Tag tags={tags}/>\n            </PostFooter>\n            {actionButton}\n        </PostViewBlock>\n    );\n};\n\nexport default PostView;","import createRequestSaga, {createRequestActionTypes} from '../lib/createRequestSaga';\nimport {createAction, handleActions} from 'redux-actions';\nimport {takeLatest} from 'redux-saga/effects';\nimport * as postsAPI from '../lib/api/posts';\n\nconst [VIEW_POST, VIEW_POST_SUCCESS, VIEW_POST_FAILURE] = createRequestActionTypes('view/VIEW_POST');\n\nexport const viewPost = createAction(VIEW_POST,id=>id);\n\nconst viewPostSaga = createRequestSaga(VIEW_POST,postsAPI.viewPost);\nexport function* viewSaga(){\n    yield takeLatest(VIEW_POST,viewPostSaga);\n}\n\nconst initialState = {\n    post:null,\n    error:null,\n};\n\nconst view = handleActions({\n    [VIEW_POST_SUCCESS]:(state,{payload:post})=>({\n        ...state,\n        post\n    }),\n    [VIEW_POST_FAILURE]:(state,{payload:error})=>({\n        ...state,\n        error\n    })\n},initialState);\n\nexport default view;","import client from \"./client\";\nimport qs from 'qs';\n\nexport const writePost = ({title,body,tags})=>\n    client.post(\"/api/posts\",{title,body,tags});\n\nexport const viewPost = id => client.get(`/api/posts/${id}`);\n\nexport const listPost = ({page,userid,tag})=>{\n    const queryString = qs.stringify({\n        page,\n        userid,\n        tag,\n    });\n    return client.get(`/api/posts?${queryString}`);\n};\n\nexport const updatePost = ({id,title,body,tags})=>\n    client.patch(`/api/posts/${id}`,{title,body,tags});\n\nexport const removePost = id =>\n    client.delete(`/api/posts/${id}`);","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport Button from './Button';\n\nconst ModalBackBlock = styled.div`\n    position:fixed;\n    top:0;\n    left:0;\n    width: 100%;\n    height: 100%;\n    padding: 15% 0;\n    background-color:rgba( 255, 255, 255, 0.5 );;\n`;\n\nconst ModalBlock = styled.div`\n    box-shadow: 2px 2px 4px grey;\n    width: 300px;\n    margin: 0 auto;\n    padding: 20px;\n    background-color:white;\n`;\n\nconst ModalTitle = styled.h1`\n    margin: 0;\n    margin-bottom: 15px;\n    font-size: 20px;\n`;\n\nconst ModalContent = styled.div``;\n\nconst ButtonBlock = styled.div`\n    display:flex;\n    justify-content: flex-end;\n    margin-top:15px;\n`;\n\nconst ModalBtnStyle = css`\n    width: 50px;\n    height: 25px;\n    margin-right: 5px;\n    font-size: 14px;\n    font-weight: 500;\n`;\n\nconst CancelBtn = styled(Button)`\n    ${ModalBtnStyle}\n\n    background-color:#E6E6E6;\n    color:gray;\n\n    &:hover{\n        background-color:#F2F2F2;\n    }\n`;\n\nconst ConfirmBtn = styled(Button)`\n    ${ModalBtnStyle}\n`;\n\nconst Modal = ({\n    visible,\n    titleText,\n    contentText,\n    cancelText=\"취소\",\n    confirmText=\"확인\",\n    onCancel,\n    onConfirm,\n}) => {\n    if(!visible) return null;\n    return (\n        <ModalBackBlock>\n            <ModalBlock>\n                <ModalTitle>{titleText}</ModalTitle>\n                <ModalContent>\n                    <div>\n                        {contentText}\n                    </div>\n                    <ButtonBlock>\n                        <CancelBtn onClick={onCancel}>{cancelText}</CancelBtn>\n                        <ConfirmBtn onClick={onConfirm}>{confirmText}</ConfirmBtn>\n                    </ButtonBlock>\n                </ModalContent>\n            </ModalBlock>\n        </ModalBackBlock>\n    );\n};\n\nexport default Modal;","import React from 'react';\nimport Modal from '../common/Modal';\n\nconst RemoveModal = ({visible, onConfirm, onCancel}) => {\n    return (\n        <Modal\n            visible={visible}\n            titleText=\"포스트 삭제\"\n            contentText=\"포스트를 정말 삭제하시겠습니까?\"\n            confirmText=\"삭제\"\n            onCancel={onCancel}\n            onConfirm={onConfirm}\n        />\n    );\n};\n\nexport default RemoveModal;","import React,{useState} from 'react';\nimport styled, {css} from 'styled-components';\nimport Button from '../common/Button';\nimport RemoveModal from './RemoveModal';\n\nconst ActionButtonBlock = styled.div`\n    display:flex;\n`;\n\nconst ViewButtonStyle = css`\n    width:50px;\n    height:25px;\n    margin-right:5px;\n    font-size: 14px;\n    font-weight:500;\n`;\n\nconst StyledButton1 = styled(Button)`\n    ${ViewButtonStyle}\n`;\n\nconst StyledButton2 = styled(Button)`\n    ${ViewButtonStyle}\n    \n    background-color:#E6E6E6;\n    color:gray;\n\n    &:hover{\n        background-color:#F2F2F2;\n    }\n`;\n\nconst ViewActionButton = ({onUpdate,onRemove}) => {\n    const [modalVisible,setModalVisible] = useState(false);\n\n    const onRemoveClick = ()=>{\n        setModalVisible(true);\n    };\n\n    const onCancel = () =>{\n        setModalVisible(false);\n    };\n\n    const onConfirm = () =>{\n        setModalVisible(false);\n        onRemove();\n    };\n\n    return (\n        <>\n            <ActionButtonBlock>\n                <StyledButton1 to=\"/\">목록</StyledButton1>\n                <StyledButton2 className=\"edit\" onClick={onUpdate}>수정</StyledButton2>\n                <StyledButton2 className=\"delete\" onClick={onRemoveClick}>삭제</StyledButton2>\n            </ActionButtonBlock>\n            <RemoveModal visible={modalVisible} onCancel={onCancel} onConfirm={onConfirm}/>\n        </>\n    );\n};\n\nexport default ViewActionButton;","import { createAction, handleActions } from \"redux-actions\";\nimport {takeLatest} from 'redux-saga/effects';\nimport createRequestSaga, {createRequestActionTypes} from '../lib/createRequestSaga';\nimport * as postAPI from '../lib/api/posts';\n\nconst CHANGE_FILED = 'write/CHANGE_FIELD';\nconst INITIALIZE ='write/INITIALIZE';\nconst [WRITE_POST,WRITE_POST_SUCCESS,WWRITE_POST_FAILURE] =createRequestActionTypes('write/WRITE_POST');\nconst SET_ORIGINAL_POST = 'write/SET_ORIGINAL_POST';\nconst [UPDATE_POST,UPDATE_POST_SUCCESS,UPDATE_POST_FAILURE] = createRequestActionTypes('write/UPDATE_POST');\n\nexport const changeField = createAction(CHANGE_FILED,({key,value})=>({\n    key,\n    value,\n}));\n\nexport const initialize = createAction(INITIALIZE);\n\nexport const writePost = createAction(WRITE_POST,({title,body,tags})=>({\n    title,\n    body,\n    tags,\n}));\n\nexport const setOriginalPost = createAction(SET_ORIGINAL_POST,post=>post);\nexport const updatePost = createAction(UPDATE_POST,({title,body,tags,originalId})=>({\n    title,\n    body,\n    tags,\n    id:originalId,\n}))\n\nconst writePostSaga = createRequestSaga(WRITE_POST,postAPI.writePost);\nconst updatePostSaga = createRequestSaga(UPDATE_POST,postAPI.updatePost);\n\nexport function* writeSaga(){\n    yield takeLatest(WRITE_POST,writePostSaga);\n    yield takeLatest(UPDATE_POST,updatePostSaga);\n}\n\nconst initialState ={\n    title:'',\n    body:'',\n    tags:[],\n    post:null,\n    postError:null,\n    originalId:null,\n};\n\nconst write = handleActions({\n    [CHANGE_FILED]:(state,{payload:{key,value}})=>({\n        ...state,\n        [key]:value,\n    }),\n    [INITIALIZE]:()=>initialState,\n    [WRITE_POST]:(state)=>({\n        ...state,\n        post:null,\n        postError:null,\n    }),\n    [WRITE_POST_SUCCESS]:(state,{payload:post})=>({\n        ...state,\n        post,\n    }),\n    [WWRITE_POST_FAILURE]:(state,{payload:postError})=>({\n        ...state,\n        postError,\n    }),\n    [SET_ORIGINAL_POST]:(state,{payload:post})=>({\n        ...state,\n        title:post.title,\n        body:post.body,\n        tags:post.tags,\n        originalId:post._id,\n    }),\n    [UPDATE_POST_SUCCESS]:(state,{payload:post})=>({\n        ...state,\n        post,\n    }),\n    [UPDATE_POST_FAILURE]:(state,{payload:postError})=>({\n        ...state,\n        postError,\n    })\n},initialState);\n\nexport default write;","import React, { useEffect } from 'react';\nimport PostView from '../../components/view/PostView';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { viewPost } from '../../modules/view';\nimport {withRouter} from 'react-router-dom';\nimport ViewActionButton from '../../components/view/ViewActionButton';\nimport { setOriginalPost } from '../../modules/write';\nimport { removePost } from '../../lib/api/posts';\n\nconst PostViewContainer = ({match,history}) => {\n    const {postId} = match.params;\n    const dispatch = useDispatch();\n    const {post, error, loading} = useSelector(({view, loading})=>({\n        post:view.post,\n        error:view.error,\n        loading:loading['view/VIEW_POST']\n    }));\n\n    useEffect(()=>{\n        dispatch(viewPost(postId));\n    },[dispatch,postId]);\n\n    const onUpdate = () =>{\n        dispatch(setOriginalPost(post));\n        history.push(\"/write\");\n    };\n\n    const onRemove = async() =>{\n        try{\n            await removePost(postId);\n            alert(\"포스트가 삭제되었습니다.\");\n            history.push(\"/\");\n        }catch(e){\n            console.log(e);\n        }\n    };\n\n    return (\n        <PostView\n            post={post}\n            error={error}\n            loading={loading}\n            actionButton={<ViewActionButton onUpdate={onUpdate} onRemove={onRemove}/>}\n        />\n    );\n};\n\nexport default withRouter(PostViewContainer);","import React from 'react';\nimport styled from 'styled-components';\n\nconst ResponsiveBlock = styled.div`\n    padding-left:1rem;\n    padding-right:1rem;\n    width:1024px;\n    margin:0 auto;\n    padding-top:60px;\n\n    @media (max-width:1024px){\n        width:768px;\n    }\n\n    @media (max-width:768px){\n        width:100%;\n    }\n`;\n\nconst Responsive = ({children,...rest}) => {\n    return (\n        <ResponsiveBlock {...rest}>{children}</ResponsiveBlock>\n    );\n};\n\nexport default Responsive;","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport PostViewContainer from '../containers/view/PostViewContainer';\nimport Responsive from '../components/common/Responsive';\n\nconst PostViewPage = () => {\n    return (\n        <>\n            <HeaderContainer/>\n            <Responsive>\n                <PostViewContainer/>\n            </Responsive>\n            \n        </>\n    );\n};\n\nexport default PostViewPage;","import React,{useRef} from 'react';\nimport styled from 'styled-components';\nimport Quill from 'quill';\nimport { useEffect } from 'react';\nimport 'quill/dist/quill.bubble.css';\n\nconst EditorBlock = styled.div`\n    width:100%;\n    padding: 80px 0 20px;\n`;\n\nconst TitleInput = styled.input`\n    width:100%;\n    border: none;\n    outline:none;\n    border-bottom: 1px solid #D8D8D8;\n    font-size: 30px;\n    padding: 10px 0;\n    font-weight: bold;\n    \n    &:focus{\n        \n    }\n`;\n\nconst QuillBlock = styled.div`\n    margin: 20px 0;\n\n    .ql-editor{\n        padding:0;\n        height: 450px;\n        line-height:1.5;\n        font-size:16px;\n    }\n\n    .ql-editor.ql-blank::before{\n        left:0px;\n    }\n`;\n\nconst Editor = ({title,body,onChange}) => {\n    const quillElement = useRef(null);\n    const quillInstance = useRef(null);\n\n    useEffect(()=>{\n        quillInstance.current = new Quill(quillElement.current,{\n            theme:\"bubble\",\n            placeholder:\"내용을 입력하세요...\",\n            modules:{\n                toolbar:[\n                    [{header:'1'},{header:'2'}],\n                    ['bold','italic','underline','strike'],\n                    [{list:'ordered'},{list:'bullet'}],\n                    ['blockquot','code-block','link','image']\n                ]\n            }\n        });\n\n        const quill = quillInstance.current;\n        quill.on('text-change',(delta,oldDelta,source)=>{\n            if(source==='user'){\n                onChange({key:'body',value:quill.root.innerHTML});\n            }\n        })\n    },[onChange]);\n    \n    const mounted = useRef(false);\n    useEffect(()=>{\n        if(mounted.current) return;\n        mounted.current = true;\n        quillInstance.current.root.innerHTML=body;\n    },[body]);\n\n    const onChangeTitle = e =>{\n        onChange({key:'title',value:e.target.value});\n    };\n\n    return (\n        <EditorBlock>\n            <TitleInput type=\"text\" placeholder=\"제목을 입력하세요.\" name=\"title\" onChange={onChangeTitle} value={title}/>\n            <QuillBlock ref={quillElement}/>\n        </EditorBlock>\n    );\n};\n\nexport default Editor;","import React,{ useCallback } from 'react';\nimport Editor from '../../components/write/Editor';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeField, initialize } from '../../modules/write';\nimport { useEffect } from 'react';\n\nconst EditorContainer = () => {\n    const dispatch = useDispatch();\n    const {title,body} = useSelector(({write})=>({\n        title:write.title,\n        body:write.body\n    }))\n\n    const onChange = useCallback(payload=>{\n        dispatch(changeField(payload));\n    },[dispatch]);\n\n    useEffect(()=>{\n        return()=>{\n            dispatch(initialize());\n        };\n    },[dispatch]);\n\n    return (\n        <Editor onChange={onChange} title={title} body={body}/>\n    );\n};\n\nexport default EditorContainer;","import React,{useState,useEffect} from 'react';\nimport styled from 'styled-components';\nimport { useCallback } from 'react';\n\nconst TagBoxBlock = styled.div`\n    \n`;\n\nconst TagForm = styled.form`\n    width: 220px;\n    display: flex;\n    border:1px solid #045FB4;\n    border-radius:4px;\n    overflow:hidden;\n\n    button{\n        border: none;\n        background-color: #045FB4;\n        color: white;\n        padding:5px 15px;\n        font-weight:bold;\n        cursor: pointer;\n    }\n\n    button:hover{\n        background-color: #0174DF;\n    }\n`;\n\nconst TagBoxInput = styled.input`\n    border:none;\n    outline:none;\n    padding: 9px;\n    flex: 1;\n`;\n\nconst TagList = styled.div`\n    padding:10px 0;\n`;\n\nconst TagListItem = styled.div`\n    display:inline-block;\n    word-break: break-all;\n    color:#848484;\n    padding:0 5px;\n\n    &:hover{\n        color:#424242;\n    }\n`;\n\nconst TagBox = ({onChangeTags, tags}) => {\n    const [input,setInput] = useState('');\n    const [localTags,setLocalTags] = useState([]);\n\n    const insertTag = useCallback(tag =>{\n        if(!tag) return;\n        if(localTags.includes(tag)) return;\n        const newTags = [...localTags,tag];\n        setLocalTags(newTags);\n        onChangeTags(newTags);\n    },[localTags,onChangeTags]);\n\n    const onChange = useCallback(e=>{\n        setInput(e.target.value);\n    },[]);\n\n    const onSubmit = useCallback(e =>{\n        e.preventDefault();\n        insertTag(input.trim());\n        setInput('');\n    },[input,insertTag]);\n\n    const onRemove = useCallback(target =>{\n        const newTags = localTags.filter(tag=>target!==tag);\n        setLocalTags(newTags);\n        onChangeTags(newTags);\n    },[localTags,onChangeTags]);\n\n    useEffect(()=>{\n        setLocalTags(tags);\n    },[tags]);\n\n    return (\n        <TagBoxBlock>\n            <TagForm onSubmit={onSubmit}>\n                <TagBoxInput\n                    type=\"text\"\n                    value={input}\n                    placeholder=\"태그를 입력하세요\"\n                    onChange={onChange}\n                />\n                <button type=\"submit\">추가</button>\n            </TagForm>\n           <TagList>\n                {\n                    localTags.map(tag=>\n                        <TagListItem key={tag} onClick={()=>onRemove(tag)}>#{tag}</TagListItem>\n                    )\n                }\n           </TagList>\n        </TagBoxBlock>\n    );\n};\n\nexport default TagBox;","import React from 'react';\nimport {useDispatch,useSelector} from 'react-redux'\nimport TagBox from '../../components/write/TagBox';\nimport { changeField } from '../../modules/write';\n\nconst TagBoxContainer = () => {\n    const dispatch =useDispatch();\n    const tags = useSelector(({write})=>write.tags);\n\n    const onChangeTags=newTags=>{\n        dispatch(changeField({\n            key:'tags',\n            value:newTags,\n        }));\n    };\n\n    return (\n        <TagBox onChangeTags={onChangeTags} tags={tags}/>\n    );\n};\n\nexport default TagBoxContainer;","import React from 'react';\nimport Button from '../common/Button';\nimport styled from 'styled-components';\n\nconst WriteActionButtonBlock = styled.div`\n    display:flex;\n    \n    button+button{\n        margin-left:10px;\n    }\n`;\n\nconst WriteActionButton = ({onPublish,onCancle,isEdit}) => {\n    return (\n        <WriteActionButtonBlock>\n            <Button width=\"145px\" onClick={onPublish}>\n                포스트 {isEdit?\"수정\":\"저장\"}\n            </Button>\n            <Button color1 width=\"65px\" onClick={onCancle}>취소</Button>\n        </WriteActionButtonBlock>\n    );\n};\n\nexport default WriteActionButton;","import React from 'react';\nimport WriteActionButton from '../../components/write/WriteActionButton';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { writePost,initialize, updatePost } from '../../modules/write';\nimport { withRouter } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nconst WriteActionButtonContainer = ({history}) => {\n    const dispatch = useDispatch();\n    const {title, body, tags, post, postError, originalId} = useSelector(({write})=>({\n        title:write.title,\n        body:write.body,\n        tags:write.tags,\n        post:write.post,\n        postError:write.postError,\n        originalId:write.originalId,\n    }));\n\n    const onPublish = () =>{\n        if(originalId){\n            dispatch(updatePost({\n                title,\n                body,\n                tags,\n                originalId,\n            }));\n            return;\n        }\n\n        dispatch(\n            writePost({\n                title,\n                body,\n                tags\n            }),\n        );\n    };\n\n    useEffect(()=>{\n        if(post){\n            const {_id,user} =post;\n            history.push(`/@${user.userid}/${_id}`);\n        }\n        if(postError){\n            console.log(postError);    \n        }\n    },[history,post,postError]);\n\n    const onCancle = () =>{\n        history.goBack();\n    }\n\n    return (\n        <WriteActionButton onPublish={onPublish} onCancle={onCancle} isEdit={originalId}/>\n    );\n};\n\nexport default withRouter(WriteActionButtonContainer);","import React from 'react';\nimport Responsive from '../components/common/Responsive';\nimport EditorContainer from '../containers/write/EditorContainer';\nimport TagBoxContainer from '../containers/write/TagBoxContainer';\nimport WriteActionButtonContainer from '../containers/write/WriteActionButtonContainer';\nimport HeaderContainer from '../containers/common/HeaderContainer';\n\nconst PostWritePage = () => {\n    return (\n        <>\n            <HeaderContainer/>\n            <Responsive>\n                <EditorContainer/>\n                <TagBoxContainer/>\n                <WriteActionButtonContainer/>\n            </Responsive>\n        </>\n    );\n};\n\nexport default PostWritePage;","import React from 'react';\nimport styled from 'styled-components';\nimport Button from '../common/Button';\n\nconst NoDataBlock = styled.div`\n    text-align:center;\n    padding:200px 0;\n\n    a{\n        margin: 0 auto;\n    }\n`;\n\nconst NotifyBlock = styled.div`\n    display:flex;\n    justify-content: center;\n    align-items:center;\n    font-size:60px;\n    font-weight: 200;\n    margin:15px 0;\n\n    .bracket{\n        margin: 0 20px;\n    }\n\n    .notifyTextBox{\n        margin-top: 10px;\n        \n        .notifyText{\n            font-size:20px;\n            margin: 0;\n            font-weight:bold;\n        }\n\n        .notifyText:not(:first-child){\n            margin-top:10px;\n        }\n    }\n`;\n\nconst NoData = ({showWriteButton}) => {\n    return (\n        <NoDataBlock>\n            <NotifyBlock>\n                <div className=\"bracket\">{\"{\"}</div>\n                <div className=\"notifyTextBox\">\n                    <p className=\"notifyText\">등록된 로그가 없습니다.</p>\n                    <p className=\"notifyText\">오늘의 로그를 남겨보세요.</p>\n                </div>\n                <div className=\"bracket\">{\"}\"}</div>\n            </NotifyBlock>\n            \n            {showWriteButton&&<Button to=\"/write\" width=\"200px\">첫 기록 시작하기</Button>}\n        </NoDataBlock>\n    );\n};\n\nexport default NoData;","import React from 'react';\nimport Button from '../common/Button';\nimport styled from 'styled-components';\nimport Tag from './Tag';\nimport { Link } from 'react-router-dom';\nimport NoData from './NoData';\n\nconst PostListBlock = styled.div`\n    padding-top: 30px;\n    min-height:700px;\n`;\n\nconst ButtonBlock = styled.div`\n    height: 50px;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n`;\n\nconst PostItemList = styled.ul`\n    list-style: none;\n    margin: 0;\n`;\n\nconst PostItemBlock = styled.li`\n    padding:50px 0;\n\n    &:first-child{\n        padding-top:30px;\n    }\n\n    &+&{\n        border-top:1px solid #F2F2F2;\n    }\n`;\n\nconst PostInfo = styled.div`\n    color: gray;\n    font-size: 14px;\n`;\n\nconst PostSubject = styled(Link)`\n    display: block;\n    font-weight: bold;\n    font-size: 24px;\n    margin: 10px 0;\n    width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`;\n\nconst PostBody = styled.div`\n    overflow: hidden;\n    word-break: break-all;\n`;\n\nconst PostItem = ({post}) => {\n    return(\n        <PostItemBlock>\n            <PostInfo>{new Date(post.publishedData).toLocaleDateString()}</PostInfo>\n            <Tag key={`tag_${post.id}`} tags={post.tags}/>\n            <PostSubject to={`@${post.user.userid}/${post._id}`}>{post.title}</PostSubject>\n            <PostBody>{post.body}</PostBody>\n        </PostItemBlock>\n    );\n}\n\nconst PostList = ({posts,error,loading,showWriteButton}) => {\n\n    if(error){\n        return <PostListBlock>에러발생</PostListBlock>;\n    }\n\n    if(loading || !posts){\n        return null;\n    }else if(posts.length<=0){\n        return <NoData showWriteButton={showWriteButton}/>;\n    }\n\n    return (\n        <PostListBlock>\n            {showWriteButton&&\n            (\n                <ButtonBlock>\n                    <Button to=\"/write\">기록하기</Button>\n                </ButtonBlock>\n            )}\n            <PostItemList>\n                {\n                    posts.map(post=>(<PostItem key={post._id} post={post}/>))\n                }\n            </PostItemList>\n        </PostListBlock>\n    );\n};\n\nexport default PostList;","import createRequestSaga, {createRequestActionTypes} from '../lib/createRequestSaga';\nimport {createAction, handleActions} from 'redux-actions';\nimport {takeLatest} from 'redux-saga/effects';\nimport * as postsAPI from '../lib/api/posts';\n\nconst [LIST_POST, LIST_POST_SUCCESS, LIST_POST_FAILURE] = createRequestActionTypes('list/LIST_POST');\n\nexport const listPost = createAction(LIST_POST,({page,userid,tag})=>({\n    page,\n    userid,\n    tag\n}));\n\nconst listPostSaga = createRequestSaga(LIST_POST,postsAPI.listPost);\nexport function* listSaga(){\n    yield takeLatest(LIST_POST,listPostSaga);\n};\n\nconst initialState = {\n    posts:null,\n    error:null,\n    lastPage:1,\n};\n\nconst list = handleActions({\n    [LIST_POST_SUCCESS]:(state,{payload:posts,meta:response})=>({\n        ...state,\n        posts,\n        lastPage:parseInt(response.headers['last-page'],10),\n    }),\n    [LIST_POST_FAILURE]:(state,{payload:error})=>({\n        ...state,\n        error\n    })\n},initialState);\n\nexport default list;","import React from 'react';\nimport PostList from '../../components/List/PostList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport qs from 'qs';\nimport { listPost } from '../../modules/list';\n\nconst PostListContainer = ({location}) => {\n    const dispatch = useDispatch();\n    const {posts, error, loading, user} = useSelector(({list,loading,user})=>({\n        posts:list.posts,\n        error:list.error,\n        loading:loading[\"list/LIST_POST\"],\n        user:user.user,\n    }));\n\n    useEffect(()=>{\n        const {userid} = user;\n        const {page,tag} = qs.parse(location.search,{\n            ignoreQueryPrefix:true\n        });\n        dispatch(listPost({page,userid,tag}));\n    },[dispatch,location.search,user]);\n\n    return (\n        <PostList posts={posts} error={error} loading={loading} showWriteButton={user}/>\n    );\n};\n\nexport default withRouter(PostListContainer);","import React from 'react';\nimport styled from 'styled-components';\nimport Button from '../common/Button';\nimport qs from 'qs';\n\nconst PaginationBlock = styled.div`\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    margin: 10px 0 60px;\n\n    .nowPage{\n        padding: 0 30px;\n    }\n`;\n\nconst Pagination = ({lastPage,userid,tag,page}) => {\n    \n    const buildLink = (userid,tag,page) =>{\n        const query = qs.stringify({tag,page});\n        return userid?`/@${userid}?${query}`:`/?${query}`;\n    };\n\n    if(lastPage===0) return null;\n\n    return (\n        <PaginationBlock>\n            <Button\n                disabled={page===1}\n                to={page===1?undefined:buildLink(userid,tag,page-1)}\n            >\n            이전\n            </Button>\n            <div className=\"nowPage\">{page} / {lastPage}</div>\n            <Button\n                disabled={page===lastPage}\n                to={page===lastPage?undefined:buildLink(userid,tag,page+1)}\n            >\n            다음\n            </Button>\n        </PaginationBlock>\n    );\n};\n\nexport default Pagination;","import React from 'react';\nimport Pagination from '../../components/List/Pagination';\nimport { useSelector } from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport qs from 'qs';\n\nconst PaginationContainer = ({location,match}) => {\n\n    const {posts, lastPage, loading} = useSelector(({list, loading})=>({\n        posts:list.posts,\n        lastPage:list.lastPage,\n        loading:loading[\"list/LIST_POST\"],\n    }));\n\n    if(!posts || loading) return null;\n\n    const {userid} = match.params;\n\n    const {tag,page=1} = qs.parse(location.search,{\n        ignoreQueryPrefix:true,\n    });\n\n    return (\n        <Pagination lastPage={lastPage} userid={userid} tag={tag} page={parseInt(page)}/>\n    );\n};\n\nexport default withRouter(PaginationContainer);","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport Responsive from '../components/common/Responsive';\nimport PostListContainer from '../containers/list/PostListContainer';\nimport PaginationContainer from '../containers/list/PaginationContainer';\n\nconst PostListPage = () => {\n    return (\n        <>\n            <HeaderContainer/>\n            <Responsive>\n                <PostListContainer/>\n                <PaginationContainer/>\n            </Responsive>\n        </>\n    );\n};\n\nexport default PostListPage;","import React,{useState} from 'react';\nimport styled,{css} from 'styled-components';\nimport { useEffect } from 'react';\nimport {VscFoldUp, VscFoldDown} from 'react-icons/vsc';\nimport cn from 'classnames';\nimport Button from '../common/Button';\n\nconst AboutMyLogBlock = styled.div`\n    height: 100vh;\n    overflow:hidden;\n`;\n\n\nconst Page = styled.div`\n    width:100vw;\n    height:100vh;\n    display:flex;\n    transition: 2.5s;\n\n    @media (max-width:768px){\n        display:block;\n    }\n`;\n\nconst PageStyle = css`\n    width:50%;\n    display: flex;\n    align-items: center;\n    font-size: 30px;\n    font-weight: bold;\n    padding: 0 10px;\n    \n    @media (max-width:768px){\n        width:100%;\n        height:50%;\n        justify-content: center;\n        padding: 10px 0;\n    }\n`;\n\nconst LeftPage = styled.div`\n    ${PageStyle}\n    justify-content: flex-end;\n    background-color:white;\n\n    @media (max-width:768px){\n        align-items: flex-end;\n    }\n`;\n\nconst RightPage = styled.div`\n    ${PageStyle}\n    background-color:#045FB4;\n    color:white;\n\n    @media (max-width:768px){\n        align-items: flex-start;\n\n        .content{\n            width:100%;\n            a{\n                margin:0 auto;\n            }\n        }\n\n        .content_text{\n            text-align:center;\n            font-size:25px;\n            margin-bottom:10px;\n        }\n    }\n`;\n\nconst GoToStartBtn = styled(Button)`\n    background:#0B173B;\n    color:white;\n    width: 150px;\n    margin-top: 10px;\n    &:hover{\n        background:#0B2161;\n    }\n`;\n\nconst FoldStyle = css`\n    position: absolute;\n    transition:1s;\n    width: 100%;\n    font-size: 45px;\n    color: #D7D7D7;\n    \n    path{\n        transform: scaleX(1.1);\n    }\n\n    &.hide{\n        display:none;\n    }\n`;\n\nconst FoldUp = styled(VscFoldUp)`\n    ${FoldStyle}\n    top: 13%;\n    &:hover{\n        top: 10%;\n    }\n`;\n\nconst FoldDown = styled(VscFoldDown)`\n    ${FoldStyle}\n    top: 90%;\n    &:hover{\n        top: 93%;\n    }\n`;\n\nconst AboutMyLog = () => {\n    const dateTextArr = [\"오늘\",\"어제\"];\n    const verbTextArr = [\"기록\",\"추억\"];\n    const [targetNum,setTargetNum] = useState(0);\n    const [movePage,setmovePage] = useState(0);\n    const [checkUp,setCheckUp] = useState(true);\n    const [checkDown,setCheckDown] = useState(false);\n\n    useEffect(()=>{\n        const timerID = setInterval(()=>{\n            changeState();\n        },2000);\n        \n        return(()=>{\n            clearInterval(timerID);\n        });\n    });\n\n    useEffect(()=>{\n        if(movePage===0){\n            setCheckUp(true);\n        }else{\n            setCheckUp(false);\n        }\n        \n        if(movePage===-100){\n            setCheckDown(true);\n        }else{\n            setCheckDown(false);\n        }\n    },[movePage]);\n\n    const changeState =()=>{\n        targetNum===0?setTargetNum(targetNum+1):setTargetNum(targetNum-1);\n    };\n\n    const movePageUp = () =>{\n        setmovePage(movePage+100);\n    };\n\n    const movePageDown = () =>{\n        setmovePage(movePage-100);\n    };\n\n    return (\n        <AboutMyLogBlock>\n            <Page style={{marginTop:`${movePage}vh`}}>\n                <LeftPage>\n                    [{dateTextArr[targetNum]}]의 당신을\n                </LeftPage>\n                <RightPage>\n                    [{verbTextArr[targetNum]}]하세요\n                </RightPage>\n            </Page>\n            <Page>\n                <LeftPage>\n                    My.Log란?\n                </LeftPage>\n                <RightPage>\n                    <div className=\"content\">\n                        <div className=\"content_text\">오늘의 하루를 기록할 수 있는<br/>블로그형 웹 사이트 입니다.</div>\n                        <GoToStartBtn to=\"/login\">바로 시작하기</GoToStartBtn>\n                    </div>\n                </RightPage>\n            </Page>\n            <FoldUp className={cn({hide:checkUp})} onClick={movePageUp}/>\n            <FoldDown className={cn({hide:checkDown})} onClick={movePageDown}/>\n        </AboutMyLogBlock>\n    );\n};\n\nexport default AboutMyLog;","import React from 'react';\nimport HeaderContainer from '../containers/common/HeaderContainer';\nimport AboutMyLog from '../components/about/AboutMyLog';\n\nconst AboutMyLogPage = () => {\n    return (\n        <>\n            <HeaderContainer/>\n            <AboutMyLog/>\n        </>\n    );\n};\n\nexport default AboutMyLogPage;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport PostListPage from './PostListPage';\nimport AboutMyLogPage from './AboutMyLogPage';\n\nconst HomePage = () => {\n    const {user} = useSelector(({user})=>({\n        user:user.user\n    }));\n    \n    if(user){\n        return (\n            <PostListPage/>\n        );\n    }else{\n        return (\n            <AboutMyLogPage/>\n        );\n    }\n};\n\nexport default HomePage;","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport LoginPage from './pages/LoginPage';\nimport SignUpPage from './pages/SignUpPage';\nimport PostViewPage from './pages/PostViewPage';\nimport PostWritePage from './pages/PostWritePage';\nimport HomePage from './pages/HomePage';\n\nconst App = () => {\n  return (\n    <>\n      <Route component={HomePage} path={[\"/@:username\",\"/\"]} exact/>\n      <Route component={LoginPage} path=\"/login\"/>\n      <Route component={SignUpPage} path=\"/signup\"/>\n      <Route component={PostViewPage} path=\"/@:username/:postId\"/>\n      <Route component={PostWritePage} path=\"/write\"/>\n    </>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport {all} from 'redux-saga/effects'\nimport auth, {authSaga} from './auth';\nimport loading from './loading';\nimport user, { userSaga } from './user';\nimport write, { writeSaga } from './write';\nimport view, { viewSaga } from './view';\nimport list, { listSaga } from \"./list\";\n\nconst rootReducer = combineReducers({\n    auth,\n    loading,\n    user,\n    write,\n    view,\n    list,\n});\n\nexport function* rootSaga(){\n    yield all([authSaga(),userSaga(),writeSaga(),viewSaga(),listSaga()]);\n};\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer, { rootSaga } from './modules';\nimport createSagaMiddleware from 'redux-saga';\nimport { tempSetUser, check } from './modules/user';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer,composeWithDevTools(applyMiddleware(sagaMiddleware)));\n\nfunction loadUser(){\n  try{\n    const user = localStorage.getItem(\"user\");\n    if(user){\n      store.dispatch(tempSetUser(user));\n      store.dispatch(check());\n    }\n  }catch{\n    console.log(\"localStorage is not working\");\n  }\n}\n\nsagaMiddleware.run(rootSaga);\nloadUser();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}